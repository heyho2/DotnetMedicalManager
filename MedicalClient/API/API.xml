<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:GD.API.Code.Converter">
            <summary>
            
            </summary>
        </member>
        <member name="M:GD.API.Code.Converter.ToModel``1(GD.Common.Base.BaseDto)">
            <summary>
            Dto2Model
            </summary>
            <typeparam name="TModel"></typeparam>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Code.Converter.ToDto``1(GD.Common.Base.BaseModel)">
            <summary>
            Model2Dto
            </summary>
            <typeparam name="TDto"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Code.Converter.MapTo``2(``1)">
            <summary>
             类型映射,默认字段名字一一对应
            </summary>
            <typeparam name="TDestination">转化之后的model，可以理解为viewmodel</typeparam>
            <typeparam name="TSource">要被转化的实体，Entity</typeparam>
            <param name="source">可以使用这个扩展方法的类型，任何引用类型</param>
            <returns>转化之后的实体</returns>
        </member>
        <member name="T:GD.API.Controllers.Achievement.AchievementBaseController">
            <summary>
            业绩看板基础控制器
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Achievement.AchievementController">
            <summary>
            业绩看板控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.CreateAchievementMonth(GD.Dtos.Achievement.CreateMonthAchievementDto)">
            <summary>
            添加月业绩目标计划
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.UpdateAchievementMonth(GD.Dtos.Achievement.UpdateMonthAchievementDto)">
            <summary>
            修改月目标数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.GetMonthAchievementAsync">
            <summary>
            获取所有的月目标数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.GetAchievementAsync(System.String)">
            <summary>
            根据月目标查询每天的数据
            </summary>
            <param name="goalGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.CreateAchievementDay(GD.Dtos.Achievement.CreateDayAchievementDto)">
            <summary>
            添加日业绩
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.UpdateAchievementDay(GD.Dtos.Achievement.UpdateDayAchievementDto)">
            <summary>
            修改日业绩目标
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Achievement.AchievementController.MQNotice">
            <summary>
            通知刷新界面
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Consultant.ConsultantBaseController">
            <summary>
            咨询师模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Consumer.ActuatingStationController">
            <summary>
            执行端
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.GetMyAppointmentListByCondition(GD.Dtos.Merchant.Appointment.GetMyAppointmentListByConditionRequestDto)">
            <summary>
            执行端-获取我的预约列表(今日/全部)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.ChangeAppointmentStatus(GD.Dtos.Merchant.Appointment.ChangeAppointmentStatusRequestDto)">
            <summary>
            执行端-预约的开始与结束
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.StartConsumption(System.String)">
            <summary>
            美疗师启动预约的消费
            </summary>
            <param name="consumptionGuid">预约消费guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.CompleteConsumption(GD.Dtos.Consumer.ActuatingStation.CompleteConsumptionRequestDto)">
            <summary>
            美疗师完成预约的消费
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.NotifyUser(System.String)">
            <summary>
            用户预约的服务完成后发送微信模板消息通知
            </summary>
            <param name="consumptionGuid"></param>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.SetMissStautsForConsumptionAsync(System.String)">
            <summary>
            美疗师设置预约记录过期
            </summary>
            <param name="consumptionGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.ChangeStatus(GD.Models.Consumer.ConsumptionModel,GD.Models.CommonEnum.ConsumptionStatusEnum)">
            <summary>
            状态更新
            </summary>
            <param name="model"></param>
            <param name="status"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.SelectOneDayMySchduleInfo(GD.Dtos.Merchant.Appointment.SelectOneDayMySchduleInfoRequestDto)">
            <summary>
            执行端-获取我的月排班-查看当天预约班次信息等
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.TherapistLoginAsync(GD.Dtos.Consumer.ActuatingStation.TherapistLoginRequestDto)">
            <summary>
            美疗师执行端登录
            </summary>
            <param name="loginRequestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.TherapistResetPasswordAsync(GD.Dtos.Merchant.Therapist.TherapistResetPasswordAsyncRequestDto)">
            <summary>
            美疗师执行端修改密码 
            重置密码
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.TherapistUpdatePassword(System.String)">
            <summary>
            修改密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ActuatingStationController.GetTherapistInfoAsync(System.String)">
            <summary>
            获取美疗师资料
            </summary>
            <param name="therapistId"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.CollectionController">
            <summary>
            收藏控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.CollectDoctor(System.String)">
            <summary>
            收藏医生
            </summary>
            <param name="doctorGuid">医生guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.CollectArticle(System.String,GD.Models.CommonEnum.CollectionTypeEnum)">
            <summary>
            收藏文章
            </summary>
            <param name="articleGuid">文章guid</param>
            <param name="collectionType">收藏类型</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.CollectProduct(System.String)">
            <summary>
            收藏产品
            </summary>
            <param name="productGuid">产品guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.CollectQuestion(System.String)">
            <summary>
            收藏提问
            </summary>
            <param name="questionGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.WhetherCollectTarget(System.String)">
            <summary>
            判断目标是否收藏
            </summary>
            <param name="targetGuid">目标Guid</param>
            <returns>是否收藏</returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CollectionController.GetTheUserListOfCollectionTargetAsync(GD.Dtos.Consumer.Collection.GetTheUserListOfCollectionTargetRequestDto)">
            <summary>
            获取收藏目标的用户列表
            </summary>
            <param name="requestDto">参数</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.CommentController">
            <summary>
            评论控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetTargetComment(GD.Dtos.Consumer.Consumer.GetTargetCommentRequestDto)">
            <summary>
            获取指定目标的评论树(评论商品，文章，医生等)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.AddComment(GD.Dtos.Consumer.Consumer.AddCommentRequestDto)">
            <summary>
            新增评论(评论商品，文章，医生等)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.AddCommentForDoctor(GD.Dtos.Consumer.Consumer.AddCommentRequestDto)">
            <summary>
            评论医生
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetScoreFromAddCommentForDoctor(System.String,System.String,System.Int32)">
            <summary>
            评价医生
            </summary>
            <param name="userId">用户GUID</param>
            <param name="doctorGuid">医生GUID</param>
            <param name="score">评价分数</param>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.AddCommentInBatchesAsync(GD.Dtos.Consumer.Consumer.AddCommentInBatchesRequestDto)">
            <summary>
            批量新增评论
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.CommentProductFromOrderDetailAsync(GD.Dtos.Consumer.Comment.CommentProductFromOrderDetailRequestDto)">
            <summary>
            从订单明细评价商品
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetProductCommentsOfMerchantAsync(GD.Dtos.Consumer.Comment.GetProductCommentsOfMerchantRequestDto)">
            <summary>
            获取商铺下商品的所有评论
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetCommentByCommentGuidAsync(System.String)">
            <summary>
            根据guid获取评论数据响应Dto
            </summary>
            <param name="commentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetTargetCommentPageListAsync(GD.Dtos.Consumer.Comment.GetTargetCommentPageListRequestDto)">
            <summary>
            获取目标评论分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetCommentDetailAsync(System.String)">
            <summary>
            获取指定楼层的评论详情
            </summary>
            <param name="commentGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.GetCompletedConsumptionPageListAsync(GD.Dtos.Consumer.Consumer.GetCompletedConsumptionPageListRequestDto)">
            <summary>
            获取已完成的消费记录分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.CommentController.CommentConsumptionAsync(GD.Dtos.Consumer.Consumer.CommentConsumptionRequestDto)">
            <summary>
            消费者提交消费的服务评价
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.ConsumerBaseController">
            <summary>
            消费者模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Consumer.ConsumerController">
            <inheritdoc />
            <summary>
            消费者控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.SendFeedback(GD.Dtos.DtoIn.AdviseDto)">
            <summary>
            投递意见反馈
            </summary>
            <param name="adviseDto">意见反馈Dto</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.SelectAddress(System.String)">
            <summary>
            消费者选择地址
            </summary>
            <param name="addressGuid">消费者地址Guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetUserDefaultAddress">
            <summary>
            获取用户默认地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.AddAddress(GD.Dtos.Merchant.Merchant.AddAddressRequestDto)">
            <summary>
            新增消费者地址数据
            </summary>
            <param name="addressDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.EditAddress(GD.Dtos.Merchant.Merchant.EditAddressRequestDto)">
            <summary>
            更新消费者地址数据
            </summary>
            <param name="addressDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.DeleteAddress(System.String)">
            <summary>
            删除消费者地址
            </summary>
            <param name="addressGuid">消费者地址Guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetConsumerAddress">
            <summary>
            获取用户地址列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyArticles(GD.Dtos.Consumer.Consumer.PageRequestDto)">
            <summary>
            分页查询我关注的文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyDoctors(GD.Models.CrossTable.GetMyDoctorsRequestDto)">
            <summary>
            分页查询我关注的医生
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyProducts(GD.Dtos.Consumer.Consumer.PageRequestDto)">
            <summary>
            获取我关注的产品列表
            </summary>
            <param name="pageDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.AddConsumerBrowseInfo(GD.Dtos.Consumer.Consumer.AddConsumerBrowseInfoRequestDto)">
             <summary>
            添加用户浏览记录
             </summary>
             <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.AddConsumerArticleView(GD.Dtos.Consumer.Consumer.AddConsumerArticleViewRequestDto)">
             <summary>
            添加用户文章浏览记录
            （一天一人一文章）
             </summary>
             <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetSearchHotWordListAsync">
            <summary>
            获取智慧云医搜索引擎热词列表Top10
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetClientWechatJSSDKSignatureAsync(System.String)">
            <summary>
            获取云医客户端公众号 JS-SDK权限验证的签名Signature
            </summary>
            <param name="url">当前网页的URL，不包含#及其后面部分</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.WeChatXmlMsgCallBack(System.String)">
            <summary>
            绑定微信公众号服务器交互回调api
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.WeChatXmlMsgCallBack">
            <summary>
            绑定微信公众号服务器交互回调
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetConsumerOpenId(System.String)">
            <summary>
            获取消费者端用户微信openid
            </summary>
            <param name="code">微信code</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetClientAppId">
            <summary>
            获取云医用户端AppId
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.MakeAnAppointmentWithTherapist(GD.Dtos.Consumer.Consumer.MakeAnAppointmentWithTherapistRequestDto)">
            <summary>
            预约美疗师(消费者入口)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.NotifyUser(System.String)">
            <summary>
            预约通知用户
            </summary>
            <param name="consumptionGuid"></param>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.NotifyOperator(System.String)">
            <summary>
            预约通知服务人员(需要修改模板Id)
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyBookedItemListOfCosmetologyAsync(GD.Dtos.Consumer.Consumer.GetMyBookedItemListOfCosmetologyRequestDto)">
            <summary>
            我的预约列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.AmendAppointmentAsync(GD.Dtos.Consumer.Consumer.AmendAppointmentRequestDto)">
            <summary>
            修改预约时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMerchantCategoryFromProjectAsync(System.String)">
            <summary>
            通过预约的卡项获取门店类别扩展信息
            </summary>
            <param name="goodsItemId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.MissConsumptionAutomaticAsync">
            <summary>
            消费预约自动过期（默认超过预约时间一小时后）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyBookedItemCountAsync">
            <summary>
            获取用户预约记录状态为已预约的记录数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetUserOrderProductCommentPageListAsync(GD.Dtos.Consumer.Consumer.GetUserOrderProductCommentPageListRequestDto)">
            <summary>
            获取用户订单商品评价分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.CommentOrderProductAsync(GD.Dtos.Consumer.Consumer.CommentOrderProductRequestDto)">
            <summary>
            评价订单商品
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyGoodsListNearExpirationAsync">
            <summary>
            获取用户临近过期的卡数据列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ConsumerController.GetMyUnusedGoodsItemListAsync">
            <summary>
            获取消费者从未使用过的项目列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.HospitalAppointmentController">
            <summary>
            医院预约相关控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.AddPatientAsync(GD.Dtos.Consumer.Consumer.GetAddPatientRequestDto)">
            <summary>
            添加就诊人
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.QueryPatientMemberAsync">
            <summary>
            查询就诊人列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.DeletePatientMemberAsync(System.String)">
            <summary>
            删除就诊人
            </summary>
            <param name="patientGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.UpdatePatientMemberAsync(GD.Dtos.Consumer.Consumer.UpdatePatientRequestDto)">
            <summary>
            修改就诊人
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetAppointmentMemberAsync(GD.Dtos.Consumer.Consumer.GetAppointmentMemberRequestDto)">
            <summary>
            查询挂号列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.DeleteAppointmentAsync(System.String)">
            <summary>
            删除挂号记录
            </summary>
            <param name="appointGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.CancelAppointmentAsync(System.String)">
            <summary>
            取消预约
            </summary>
            <param name="appointGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetAppointmentDoctorAsync(GD.Dtos.Doctor.Doctor.GetAppointmentDoctorRequestDto)">
            <summary>
            获取诊所和医院下所有医生
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetHospitalDepartmentsAsync(System.String)">
            <summary>
            获取医院下的科室
            </summary>
            <param name="hospitalGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetLastAppointmentAsync">
            <summary>
            获取用户最近一次预约
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.QueryHospitalPageListAsync(GD.Dtos.Doctor.Doctor.HospitalPageListRequestDto)">
            <summary>
            分页获取医院列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetAppointmentDoctorInfoAsync(System.String)">
            <summary>
            获取医生最近7天可挂号数据
            </summary>
            <param name="doctorGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetAppointmentDoctorDetailAsync(GD.Dtos.Doctor.Doctor.GetAppointmentDoctorScheduleDetailRequest)">
            <summary>
             获取医生上,下午排班详情数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetDoctorRecommendAsync(System.String)">
            <summary>
            推荐咨询医生
            </summary>
            <param name="doctorGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.AddAppointmentAsync(GD.Dtos.Doctor.Doctor.AddAppointmentRequestDto)">
            <summary>
            新增挂号预约
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.HospitalAppointmentController.GetWaitingAsync">
            <summary>
            获取用户是否存在待就诊数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.LikeController">
            <inheritdoc />
            <summary>
            点赞控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.LikeController.LikeTarget(System.String)">
            <summary>
            点赞/取消点赞目标
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.LikeController.GetLikeState(System.String)">
            <summary>
            检查用户对目标是否点赞
            </summary>
            <param name="targetGuid">目标guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.LikeController.GetLikeNumber(System.String)">
            <summary>
            获取点赞数量
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.ServiceMemberController">
            <summary>
            服务对象控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ServiceMemberController.GetServiceMemberListAsync">
            <summary>
            获取用户服务对象成员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ServiceMemberController.CreateEidtServiceMemberAsync(GD.Dtos.Consumer.ServiceMember.CreateEidtServiceMemberRequestDto)">
            <summary>
            创建/修改服务对象成员数据请求
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ServiceMemberController.DeleteServiceMemberAsync(System.String)">
            <summary>
            删除服务对象成员记录
            </summary>
            <param name="serviceMemberId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.ServiceMemberController.GetUserServiceMembersAsync(System.String)">
            <summary>
            获取用户账号下服务对象列表
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Consumer.StoreManageAppointmentController">
            <summary>
            预约
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.AddAppointment(GD.Dtos.Merchant.Appointment.AddAppointmentRequestDto)">
            <summary>
            新增预约
            </summary>
            <param name="requestDto"></param>
            <returns></returns>AllowAnonymous
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.SelectScheduleListByCondition(GD.Dtos.Merchant.Appointment.GetScheduleListByConditionRequestDto)">
            <summary>
            条件查询排班列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.GetAppointmentList(GD.Dtos.Merchant.Appointment.GetAppointmentListRequestDto)">
            <summary>
            查询今日预约/查询全部预约
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.CancelOppointmentAsync(GD.Dtos.Merchant.Appointment.UpdateOppointmentStatusRequestDto)">
            <summary>
            取消预约
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.GetOppointmentStatusEnum">
            <summary>
            获得预约状态枚举
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Consumer.StoreManageAppointmentController.GetEnumDescription(System.Enum)">
            <summary>
            get enum description by enumValue
            </summary>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Decoration.DecorationBaseController">
            <summary>
            装修管理控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Decoration.DecorationController">
            <summary>
            装修模块控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Decoration.DecorationController.GetDecorationContentAsync(System.String)">
            <summary>
            获取装修记录内容
            </summary>
            <param name="decorationGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Decoration.DecorationController.ClearEmptyRow(System.Collections.Generic.List{GD.Dtos.Decoration.GetDecorationContentResponseDto})">
            <summary>
            清除空行
            </summary>
            <param name="contents"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Decoration.DecorationController.GetHomeBannersContentAsync">
            <summary>
            获取云购首页banner装修记录内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Decoration.DecorationController.GetClassificationEntranceContentAsync">
            <summary>
            获取云购分类入口装修记录内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Decoration.DecorationController.GetInstantActivityContentAsync">
            <summary>
            获取云购即时活动装修记录内容
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.DoctorBaseController">
            <summary>
            医生模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Doctor.DoctorController">
            <inheritdoc />
            <summary>
            医生控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.RegisterDoctor(GD.Dtos.Doctor.Doctor.RegisterDoctorRequestDto)">
            <summary>
            注册医生
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorJobTitles">
            <summary>
            获取医生职称列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorRegisterState">
            <summary>
            查看当前用户是否注册医生,若注册提供注册状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetOfficesByParent(GD.Dtos.Doctor.Doctor.GetOfficesByParentRequestDto)">
            <summary>
            获取下属科室
            </summary>
            <param name="officeDto">获取科室列表传入Dto</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetHospitalOfficeTree">
            <summary>
            获取医院科室树结构数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetSubordinateOffeces(GD.Dtos.Doctor.Doctor.GetHospitalOfficeTreeOfficeItemDto)">
            <summary>
            递归获取下属科室
            </summary>
            <param name="offceDto"></param>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorCertificateConfig">
            <summary>
            获取医生注册资料配置项
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorCertificateDetailAsync">
            <summary>
            获取医生注册资料配置项明细（所有配置项+配置项对应的值）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorDetails(System.String)">
            <summary>
            获取医生详情
            </summary>
            <param name="doctorGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorNameAndNameAsync(System.String)">
            <summary>
            获取医生头像和姓名
            </summary>
            <param name="doctorGuid">医生guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctors(GD.Dtos.Doctor.Doctor.GetAskedDoctorsRequestDto)">
            <summary>
            获取问医服务的医生列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorArticleDetails(System.String)">
            <summary>
            获取医生文章详情
            </summary>
            <param name="articleGuid">文章Guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorHotArticle">
            <summary>
            获取问医热点文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorHotBanner">
            <summary>
            获取问医热点Banner
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorLectureHallArticle(GD.Dtos.Doctor.Doctor.GetAskedDoctorLectureHallArticleRequestDto)">
            <summary>
            获取问医讲堂文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorLectureHallBanner">
            <summary>
            获取问医讲堂Banner
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorClassicQa(GD.Dtos.Doctor.Doctor.GetAskedDoctorClassicQaRequestDto)">
            <summary>
            获取问医经典问答列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetAskedDoctorClassicQaDetails(System.String)">
            <summary>
            获取问医经典问答详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.SearchDoctorAsync(GD.Dtos.Doctor.Doctor.SearchDoctorRequestDto)">
            <summary>
            搜索医生
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorListAsync(GD.Dtos.Doctor.Doctor.GetDoctorListRequestDto)">
            <summary>
            获取医生列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.AuditDoctorRegisterInfo(GD.Dtos.Doctor.Doctor.AuditDoctorRegisterInfoRequestDto)">
            <summary>
            审核医生注册信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorTopicAsync(GD.Dtos.Admin.Doctor.GetDoctorTopicRequestDto)">
            <summary>
            获取消息对话列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.TopicMessageAsync(GD.Dtos.Admin.Doctor.TopicMessageRequestDto)">
            <summary>
            对话消息列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.CheckIsDoctorUserAsync(System.String)">
            <summary>
            判断用户是否是医生用户
            </summary>
            <param name="userGuid">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.ModifyDoctorInfoAsync(GD.Dtos.Doctor.Doctor.ModifyDoctorInfoRequestDto)">
            <summary>
            医生修改自己的医生数据
            </summary>
            <param name="doctorDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorListByParentOfficeNodeAsync(GD.Dtos.Doctor.Doctor.GetDoctorListByParentOfficeNodeRequestDto)">
            <summary>
            获取当前科室和下属所有科室的医生列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetHospitalRecommendDoctorListAsync(GD.Dtos.Doctor.Doctor.GetHospitalRecommendDoctorListRequestDto)">
            <summary>
            获取医院下推荐医生列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetPatientInfoAsync(System.String)">
            <summary>
            获取患者详情信息
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorByFirstLevelOfficeNameAsync(GD.Dtos.Doctor.Doctor.GetDoctorByFirstLevelOfficeNameRequestDto)">
            <summary>
            通过一级科室名称获取医生
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorFansListAsync(GD.Dtos.Doctor.Doctor.GetDoctorFansListRequestDto)">
            <summary>
            获取医生粉丝列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetDoctorClientAppId">
            <summary>
            获取医生端口AppId
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.UpdateDoctorOpenIdAsync(GD.Dtos.Doctor.Doctor.UpdateDoctorOpenIdRequestDto)">
            <summary>
            更新医生OpenId
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetFamousRecommendDoctorListAsync(GD.Dtos.Doctor.Doctor.GetFamousRecommendDoctorListRequestDto)">
            <summary>
            获取名医推荐医生列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorController.GetWhetherIsHospitalOfDoctorHospitalAsync">
            <summary>
            获取医生所在单位是否是医院
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.DoctorScoreController">
            <summary>
            医生积分控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorScoreController.GetDoctorActionList">
            <summary>
            获取医生行为
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorScoreController.GetDoctorScoreAllInfo(GD.Dtos.Doctor.Score.GetDoctorScoreAllInfoRequestDto)">
            <summary>
            获取医生积分所有信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.DoctorScoreController.GetDoctorScore(GD.Dtos.Doctor.Score.GetDoctorScoreRequestDto)">
            <summary>
            查询医生积分
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.HospitalController">
            <summary>
            医院控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetAllHospital">
            <summary>
            获取所有医院数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetHospitalPageListAsync(GD.Dtos.Doctor.Hospital.GetHospitalPageListRequestDto)">
            <summary>
            分页获取医院列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetHospitalInfoAsync(GD.Dtos.Doctor.Hospital.GetHospitalInfoRequestDto)">
            <summary>
            医院详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetCcupationalDiseaseHospital(GD.Dtos.Doctor.Hospital.GetCcupationalDiseaseHospitalRequestDto)">
            <summary>
            获取职业病资质医院
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.SearchHospitalAsync(GD.Dtos.Doctor.Hospital.SearchHospitalRequestDto)">
            <summary>
            搜索医院
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetHospitalAsync(System.String)">
            <summary>
            获取指定医院信息
            </summary>
            <param name="hospitalGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetHospitalOfficesAsync(System.String)">
            <summary>
            获取指定医院下二级科室
            </summary>
            <param name="hospitalGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.EvaluvationAsync(GD.Dtos.Doctor.Hospital.CreateHospitalEvaluvationRequestDto)">
            <summary>
            提交医院评价
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalController.GetEvaluvationAsync(System.String)">
            <summary>
            获取医院评价
            </summary>
            <param name="evaluationGuid"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.HospitalManagerController">
            <summary>
            医院管理端
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.LoginAsync(GD.Dtos.Doctor.Hospital.HosipitalLoginRequestDto)">
            <summary>
            登录
            </summary>
            <param name="loginRequestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.ModifyPassword(GD.Dtos.Doctor.Hospital.HospitalModifyPasswordRequestDto)">
            <summary>
            修改密码 
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetHospitalCurrentDoctorOnlineStatistic">
            <summary>
            获取医院当天医生在线统计
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetHospitaHistoricalDoctorOnlineStatistic(GD.Dtos.Doctor.Hospital.GetHospitaHistoricalDoctorRequestDto)">
            <summary>
            获取医院上线医生历史统计
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetHospitalDoctorOnlineRank(GD.Dtos.Doctor.Hospital.GetHospitaHistoricalDoctorRequestDto)">
            <summary>
            获取医院医生在线时长排行榜
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetHospitalDoctorAnswerQuestionRank(GD.Dtos.Doctor.Hospital.GetHospitaHistoricalDoctorRequestDto)">
            <summary>
            获取医院医生解答问题排行榜
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetHospitalDoctorConsultRank(GD.Dtos.Doctor.Hospital.GetHospitaHistoricalDoctorRequestDto)">
            <summary>
            获取医院医生用户咨询排行榜
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetDoctorAnswerAndConsultListAsync(GD.Dtos.Doctor.Hospital.GetHospitalDoctorAnswerAndConsultPageListRequestDto)">
            <summary>
            获取医生列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetWhetherIsHospitalAsync">
            <summary>
            获取当前登录是否为医院
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetAppointmentPageListTodayAsync(GD.Dtos.Doctor.Hospital.GetAppointmentPageListTodayRequestDto)">
            <summary>
            获取诊所今日挂号列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.ReceptionPatientAsync(System.String)">
            <summary>
            接诊
            </summary>
            <param name="appointmentGuid">挂号预约guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.SetAppointmentMissedAsync(System.String)">
            <summary>
            过号
            </summary>
            <param name="appointmentGuid">挂号预约guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.ChangeMissedAppointmentToWaiting(System.String)">
            <summary>
            过号转就诊
            </summary>
            <param name="appointmentGuid">挂号预约guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetAppointmentPersonTimeTodayStatisticsAsync">
            <summary>
            今日挂号人次统计
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetReceptionPersonTimeTodayStatisticsAsync">
            <summary>
            今日接诊人次统计
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetAppointmentPersonTimeStatisticsAsync(GD.Dtos.Doctor.Hospital.GetAppointmentPersonTimeStatisticsRequestDto)">
            <summary>
            诊所挂号趋势统计
            查询区间不可超过一年(366)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetAppointmentPageListAsync(GD.Dtos.Doctor.Hospital.GetAppointmentPageListRequestDto)">
            <summary>
            获取诊所挂号列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.CreateAppointmentAsync(GD.Dtos.Doctor.Hospital.CreateAppointmentRequestDto)">
            <summary>
            新增挂号预约
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetAppointmentStatusList">
            <summary>
            预约状态列表 例如：key = 1 , value = 待就诊
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetOfficeSelectListWithDoctorOfHospitalAsync(System.String)">
            <summary>
            获取科室下存在医生的科室列表 例如：key = "科室Id" , value = "内科"
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetDoctorSelectListAsync(System.String)">
            <summary>
            获取科室下的医生列表 例如 key= "医生Id" , value = "张医生"
            </summary>
            <param name="officeGuid">科室Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalManagerController.GetDoctorScheduleByDateIntervalAsync(GD.Dtos.Doctor.Hospital.GetDoctorScheduleByDateIntervalRequestDto)">
            <summary>
            获取时日期区间内医生排班信息和预约挂号余号信息：排班日期和排班guid
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.HospitalScheduleController">
            <summary>
            医院班次相关控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetWorkShiftTemplateListAsync">
            <summary>
            获取医院班次模板列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetWorkShiftDetailsAsync(System.String)">
            <summary>
            获取医院模板下的班次详情
            </summary>
            <param name="templateGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.CreateEditWorkshiftTemplateAsync(GD.Dtos.Doctor.Hospital.CreateEditWorkshiftTemplateRequestDto)">
            <summary>
            新增或编辑班次模板
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.DeleteWorkshiftTemplateAsync(System.String)">
            <summary>
            删除班次模板
            </summary>
            <param name="templateGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetCycleListMonthAsync">
            <summary>
            获取排班周期列表：默认获取上月和上月之后的排班周期数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetDoctorScheduleListOfCycleAsync(System.String)">
            <summary>
            获取周期下的排班详情列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetHospitalScheduleListOneDayAsync(System.DateTime)">
            <summary>
            获取医院某天的排班详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.EditHospitalScheduleOneDayAsync(GD.Dtos.Doctor.Hospital.EditHospitalScheduleOneDayRequestDto)">
            <summary>
            编辑医院某天的排班
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.CreateCopyScheduleAsync(GD.Dtos.Doctor.Hospital.CreateCopyScheduleRequestDto)">
            <summary>
            新增或复制排班数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.DeleteSchduleOneDayAsync(System.DateTime)">
            <summary>
            删除某天的排班数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetHospitalScheduleDateListInMonthAsync(System.DateTime)">
            <summary>
            获取医院指定月份有排班的日期列表
            </summary>
            <param name="date">指定月份内的某一天日期</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.HospitalScheduleController.GetDoctorSelectListAsync">
            <summary>
            获取医院下的医生选择项列表 
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.OfficeController">
            <summary>
            科室 控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.OfficeController.GetHospitalOfficeDtoListAsync(GD.Dtos.Doctor.Office.GetHospitalOfficeDtoListRequestDto)">
            <summary>
            获取医院某一级的科室Dto列表（带有图片）
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.OfficeController.GetHospitalOfficeListAsync(GD.Dtos.Doctor.Office.GetHospitalOfficeListRequestDto)">
            <summary>
            获取医院科室列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.OfficeController.GetRecommendOfficeAsync(GD.Dtos.Doctor.Office.GetRecommendOfficeRequestDto)">
            <summary>
            获取推荐科室
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.OfficeController.GetOfficeListPaging(GD.Dtos.Doctor.Office.GetOfficeListPagingRequestDto)">
            <summary>
            获取科室帅选列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.OfficeController.GetDistinctOfficeAsync">
            <summary>
            获取去重科室
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Doctor.PrescriptionController">
            <summary>
            处方相关控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetMedicationDictionaryPageListAsync(GD.Dtos.Doctor.Doctor.GetMedicationDictionaryRequestDto)">
            <summary>
            查询用药数据字典
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.CreateMedicationDictionary(GD.Dtos.Doctor.Doctor.CreateMedicationDictionaryRequestDto)">
            <summary>
            添加字典数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.DeleteMedicationDictionary(GD.Dtos.Doctor.Doctor.DeleteMedicationDictionaryRequestDto)">
            <summary>
            删除字典数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.UpdateMedicationDictionaryAsync(GD.Dtos.Doctor.Doctor.UpdateMedicationDictionaryRequestDto)">
            <summary>
            编辑用药字典信息
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.ConfirmAppointmentReceivables(System.String)">
            <summary>
            预约确认收款
            </summary>
            <param name="appointmentGuid">预约Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetCollectionTodayAsync">
            <summary>
            今日(未)收款
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetCollectionToMonthsAndYearAsync">
            <summary>
            本月(本年)收款
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetCollectionRatiosync(GD.Dtos.Doctor.Doctor.GetCollectionRatioRequest)">
            <summary>
            收款比例
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetCollectionDataync(GD.Dtos.Doctor.Doctor.GetCollectionRatioRequest)">
            <summary>
            获取收款统计数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetAPrescriptionDataAsync(GD.Dtos.Doctor.Doctor.GetCollectionRequest)">
            <summary>
            获取科室收入统计
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetPrescriptionDrugUsage">
            <summary>
            获取药品用法字典数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetPrescriptionDrugFrequency">
            <summary>
            获取药品频度单位字典数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.CreatePrescription(GD.Dtos.Doctor.Prescription.ProcessPrescriptionRequestDto)">
            <summary>
            创建处方
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.UpdatePrescription(GD.Dtos.Doctor.Prescription.ProcessPrescriptionRequestDto)">
            <summary>
            修改处方
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.CancellPrescription(GD.Dtos.Doctor.Prescription.CancellPrescriptionRequestDto)">
            <summary>
            作废处方
            </summary>
            <param name="request">作废请求参数</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetPrescription(System.String,System.String)">
            <summary>
            获取预约处方详情
            </summary>
            <param name="appointmentGuid">预约Guid</param>
            <param name="actionType">操作（调用）</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.Validate(GD.Dtos.Doctor.Prescription.PrescriptionContext)">
            <summary>
            验证参数
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.UpdatePrescriptionInformationPaidStatus(GD.Dtos.Doctor.Prescription.PrescriptionContext)">
            <summary>
            更新接诊记录收款状态
            </summary>
            <param name="context">操作上下文</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetPrescriptionBillsAsync(System.String,System.String)">
            <summary>
            获取处方单据数据(打印处方单时的预览数据)
            </summary>
            <param name="informationGuid">诊疗记录guid</param>
            <param name="prescriptionIds">prescriptionIds（处方Id，多个处方用逗号隔开）</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetPrescriptionRecordPageListAsync(GD.Dtos.Doctor.Prescription.GetPrescriptionRecordPageListRequestDto)">
            <summary>
            获取处方记录分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Doctor.PrescriptionController.GetHistoryPrescriptionRecordPageListAsync(GD.Dtos.Doctor.Prescription.GetHistoryPrescriptionRecordsRequestDto)">
            <summary>
            获取历史处方记录分页列表
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Expert.ExpertBaseController">
            <summary>
            医疗专家模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.FAQs.FAQsBaseController">
            <summary>
            问答模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.FAQs.FAQsClientController">
            <summary>
            问答模块 用户端接口
            </summary>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetFAQsTrendsAsync(System.Int32)">
            <summary>
            获取问答动态
            </summary>
            <param name="limit">获取的记录条数</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetHotFAQsPageListAsync(GD.Dtos.FAQs.FAQsClient.GetHotFAQsRequestDto)">
            <summary>
            获取问答广场热门问题
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetLatestFAQsPageListAsync(GD.Dtos.FAQs.FAQsClient.GetLatestFAQsPageListRequestDto)">
            <summary>
            获取问答广场最新问题
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.PostQuestionsAsync(GD.Dtos.FAQs.FAQsClient.PostQuestionsRequestDto)">
            <summary>
            积分-发布问题
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetAskPayTypeAsync">
            <summary>
            获取提问支付类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.FAQsWechatPayAsync(GD.Dtos.FAQs.FAQsClient.FAQsWechatPayRequest)">
            <summary>
            问答微信支付
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.PayCallBackTestAsync(System.String)">
            <summary>
            支付回调测试
            </summary>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.PostQuestionsByWeChatPayAsync(GD.Dtos.FAQs.FAQsClient.PostQuestionsByWeChatPayAsyncRequest)">
            <summary>
            悬赏金-提交问题
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetRandomString(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            生成随机字符串 
            </summary>
            <param name="length">目标字符串的长度</param>
            <param name="useNum">是否包含数字，1=包含，默认为包含</param>
            <param name="useLow">是否包含小写字母，1=包含，默认为包含</param>
            <param name="useUpp">是否包含大写字母，1=包含，默认为包含</param>
            <param name="useSpe">是否包含特殊字符，1=包含，默认为不包含</param>
            <param name="custom">要包含的自定义字符，直接输入要包含的字符列表</param>
            <returns>指定长度的随机字符串</returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.DeleteQuestionAsync(System.String)">
            <summary>
            删除问题
            </summary>
            <param name="questionGuid">问题guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetOwnedQuestionsPageListAsync(GD.Dtos.FAQs.FAQsClient.GetOwnedQuestionsPageListRequestDto)">
            <summary>
            获取我的提问分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetFAQsDetailAsync(System.String)">
            <summary>
            获取问题详情
            </summary>
            <param name="questionGuid">问题guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetFAQsAnswerPageListAsync(GD.Dtos.FAQs.FAQsClient.GetFAQsAnswerPageListRequestDto)">
            <summary>
            获取问题的回答分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.SetBestAnswerAsync(System.String)">
            <summary>
            设置最佳答案
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.GetQuestionCollectionListAsync(GD.Dtos.FAQs.FAQsClient.GetQuestionCollectionListRequestDto)">
            <summary>
            获取用户收藏的问题列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsClientController.PostVisitQuestionAsync(System.String)">
            <summary>
            浏览问题增加浏览量
            </summary>
        </member>
        <member name="T:GD.API.Controllers.FAQs.FAQsDoctorClientController">
            <summary>
            问答模块 医生端接口
            </summary>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetOwnedQuestionsPageListAsync(GD.Dtos.FAQs.FAQsClient.GetOwnedQuestionsPageListRequestDto)">
            <summary>
            获取我的提问分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetFAQsAnswerPageListAsync(GD.Dtos.FAQs.FAQsClient.GetFAQsAnswerPageListRequestDto)">
            <summary>
            获取问题的回答分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetQuestionCollectionListAsync(GD.Dtos.FAQs.FAQsClient.GetQuestionCollectionListRequestDto)">
            <summary>
            获取用户收藏的问题列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetFaqsQuestionPageAsync(GD.Dtos.FAQs.FAQsClient.GetFaqsQuestionPageRequestDto)">
            <summary>
            问题列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetMyReplyPageAsync(GD.Dtos.FAQs.FAQsClient.GetMyReplyPageRequestDto)">
            <summary>
            获取我的回答列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.ReplyFaqsQuestionAsync(GD.Dtos.FAQs.FAQsClient.ReplyFaqsQuestionRequestDto)">
            <summary>
            回答问题
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetFaqsQuestionInfoAsync(GD.Dtos.FAQs.FAQsClient.GetFaqsQuestionInfoRequestDto)">
            <summary>
            获取问题详细
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetMyEaringsAsync">
            <summary>
             收益中心
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetEaringsRecordsAsync(GD.Dtos.FAQs.FAQsClient.GetEaringsRecordsAsyncRequest)">
            <summary>
            获取收益明细
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetWithdrawRecordsAsync(GD.Dtos.FAQs.FAQsClient.GetWithdrawRecordsAsyncRequest)">
            <summary>
            获取提现明细
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.WithdrawEaringsAsync(GD.Dtos.FAQs.FAQsClient.WithdrawEaringsAsyncRequest)">
            <summary>
            提现
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsDoctorClientController.GetRandomString(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            生成随机字符串 
            </summary>
            <param name="length">目标字符串的长度</param>
            <param name="useNum">是否包含数字，1=包含，默认为包含</param>
            <param name="useLow">是否包含小写字母，1=包含，默认为包含</param>
            <param name="useUpp">是否包含大写字母，1=包含，默认为包含</param>
            <param name="useSpe">是否包含特殊字符，1=包含，默认为不包含</param>
            <param name="custom">要包含的自定义字符，直接输入要包含的字符列表</param>
            <returns>指定长度的随机字符串</returns>
        </member>
        <member name="T:GD.API.Controllers.FAQs.FAQsIntergralController">
            <summary>
            问答系统-积分相关
            </summary>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.RegisterSendIntergral(System.String,GD.Common.EnumDefine.UserType)">
            <summary>
            注册送积分（注册成功后，调用该接口）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.CheckSignIn(GD.Common.EnumDefine.UserType)">
            <summary>
            判断是否签到
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.GetUserSignInDataCurrentMonthAsync(GD.Dtos.FAQs.FAQsIntergral.GetUserSignInDataCurrentMonthRequest)">
            <summary>
            获取该用户该月签到情况
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.GetResponseData(System.Collections.Generic.List{GD.Models.Utility.ScoreModel})">
            <summary>
            组装
            </summary>
            <param name="modelList">有效的签到</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.CreateDateSql(System.DateTime,System.DateTime)">
            <summary>
            生成日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.CheckInSendIntergral(System.String,GD.Common.EnumDefine.UserType)">
            <summary>
            签到积分 
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.ViewArticleSendIntergral(GD.Dtos.FAQs.FAQsIntergral.ViewArticleSendIntergralRequest)">
            <summary>
            浏览文章送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.ShareToSendIntergral(GD.Common.EnumDefine.UserType)">
            <summary>
            分享送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.ViewQuestionToSendIntergral(GD.Dtos.FAQs.FAQsIntergral.ViewQuestionToSendIntergralRequest)">
            <summary>
            浏览问题送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.CollectArticleOrQuestionSendIntergral(GD.Dtos.FAQs.FAQsIntergral.CollectArticleOrQuestionSendIntergralRequest)">
            <summary>
            收藏文章或问题
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.AskQuestionSendIntergral(GD.Common.EnumDefine.UserType)">
            <summary>
            提问问题
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.EvaluateDoctorToSendIntergral(GD.Dtos.FAQs.FAQsIntergral.EvaluateDoctorToSendIntergralRequest)">
            <summary>
            问医评价送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.AttentionToDoctorSendIntergral(GD.Dtos.FAQs.FAQsIntergral.AttentionToDoctorSendIntergralRequest)">
            <summary>
            关注医生送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.CancelAttentionToDoctorReduceIntergral(GD.Dtos.FAQs.FAQsIntergral.CancelAttentionToDoctorReduceIntergralRequest)">
            <summary>
            取消关注医生减扣积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.ImprovePersonalInformationToSendIntergral(GD.Common.EnumDefine.UserType)">
            <summary>
            完善个人信息送积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.FAQs.FAQsIntergralController.InsertIntergral(System.Int32,GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum,GD.Common.EnumDefine.UserType)">
            <summary>
            积分操作(只是Consumer)
            </summary>
            <param name="variation"></param>
            <param name="reasonEnum"></param>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum">
            <summary>
            送积分类型枚举
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.注冊送积分">
            <summary>
            注冊送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.连续签到送积分">
            <summary>
            连续签到送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.浏览文章送积分">
            <summary>
            浏览文章送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.分享送积分">
            <summary>
            分享送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.浏览问题送积分">
            <summary>
            浏览问题送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.收藏文章或问题送积分">
            <summary>
            收藏文章或问题送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.提问问题送积分">
            <summary>
            提问问题送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.推荐好友关注">
            <summary>
            推荐好友关注
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.问医评价送积分">
            <summary>
            问医评价送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.关注医生送积分">
            <summary>
            关注医生送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.完善个人信息送积分">
            <summary>
            完善个人信息送积分
            </summary>
        </member>
        <member name="F:GD.API.Controllers.FAQs.FAQsIntergralController.SendIntergralEnum.取消关注医生减扣积分">
            <summary>
            取消关注医生，减扣积分
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Health.HealthBaseController">
             <summary>
            健康模块控制器基类
             </summary>
        </member>
        <member name="T:GD.API.Controllers.Health.HealthIndicatorController">
            <summary>
            日常健康指标控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.GetHealthStatusAsync">
            <summary>
            获取用户健康档案第一次打开 false:第一次打开
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.UpdateHealthStatusAsync">
            <summary>
            更改第一次用户点击创建健康档案
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.GeHealthIndicatorListtAsync(System.String)">
            <summary>
            获取日常指标列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.GetHealthIndicatorOptionAsync(System.String)">
            <summary>
            获取健康指标项数据
            </summary>
            <param name="indicatorGuid">健康指标id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.GetHealthIndicatorDetailAsync(GD.Dtos.Health.GetHealthIndicatorDetailRequestDto)">
            <summary>
            获取健康指标项详情数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.AddAHealthIndicatorAsync(GD.Dtos.Health.AddHealthIndicatorRequestDto)">
            <summary>
            新增健康指标数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthIndicatorController.UpdateConsumerHealthIndicatorSuggestion(GD.Dtos.Health.UpdateHealthIndicatorSuggestion)">
            <summary>
            更新医生建议
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Health.HealthInformationController">
            <summary>
            健康基础信息控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthInformationController.GetHealthInformationAsync(System.String)">
            <summary>
            获取用户基础信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthInformationController.UpdateHealthInformationAsync(GD.Dtos.Health.GetHealthInformationRequestDto)">
            <summary>
            健康基础数据更新
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthInformationController.GetHealthInformationArchivesPageListAsync(GD.Dtos.Health.GetHealthInformationArchivesPageListRequestDto)">
            <summary>
            健康报告查询
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthInformationController.GetHealthInformationArchivesDetailAsync(System.String)">
            <summary>
            健康报告附件查询
            </summary>
            <param name="reportGuid">报告id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.HealthInformationController.UpdateHealthInformationBatchAsync(GD.Dtos.Health.UpdateHealthInformationRequestDto)">
            <summary>
            健康基础数据批量更新
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Health.QuestionnaireController">
            <summary>
            健康问卷控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.GetHealthQuestionnairePageListAsync(GD.Dtos.Health.GetHealthQuestionnairePageListRequestDto)">
            <summary>
            健康问卷查询
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.UpdateQuestionnaireAsync(System.String)">
            <summary>
            点击问卷进行答题(问卷状态为空时候调用)
            </summary>
            <param name="questionnaireGuid">问卷Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.GetHealthQuestionnaireAsync(GD.Dtos.Health.GetQuestionnaireQuestionRequestDto)">
            <summary>
            问卷题目查询(做题)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.Assignment(GD.Dtos.Health.GetQuestionnaireQuestionResponseDto,System.Int32,GD.Models.Questionnaire.QuestionnaireQuestionModel,GD.Models.Questionnaire.QuestionnaireResultModel)">
            <summary>
            给返回对象赋值
            </summary>
            <param name="questionnaireQuestionResponse"></param>
            <param name="i"></param>
            <param name="qestionnaireQestion"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.CheckQuestionnaireQuestion(System.Int32,System.String,System.String)">
            <summary>
            查找下一题
            </summary>
            <param name="i">问题排序号</param>
            <param name="questionnaireGuid">问卷id</param>
            <param name="resultGuid">用户问卷id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.GetConumserQuestionnaireResultAsync(System.String)">
            <summary>
            获取用户问卷结果
            </summary>
            <param name="resultGuid">用户问卷结果Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.SubmitQuestionnaireAsync(System.String)">
            <summary>
            提交问卷
            </summary>
            <param name="resultGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Health.QuestionnaireController.DeleteQuestionnaireAsync(System.String)">
            <summary>
            删除用户问卷
            </summary>
            <param name="questionnaireGuid">问卷Id</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.MallPay.FangDiPayController">
            <summary>
            方迪-商城支付相关
            </summary>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.GetOpenIDByCodeTest(GD.Dtos.MallPay.FangDiInterface.GetOpenIDRequestDto)">
            <summary>
            请求获取openid
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.OrdersPay(GD.Dtos.MallPay.FangDiInterface.OrdersPayRequestDto)">
            <summary>
            h5下单接口
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.OrderRefundAsync(GD.Dtos.MallPay.FangDiInterface.DoRefundRequestDto)">
            <summary>
            退款
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.OrderListRefundAsync(System.Boolean)">
            <summary>
            退款--test
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.QueryTradeAsync(GD.Dtos.MallPay.FangDiInterface.QueryATradeRequestDto)">
            <summary>
            支付结果查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.CloseTradeAsync(GD.Dtos.MallPay.FangDiInterface.DoCloseTradeRequestDto)">
            <summary>
            关闭交易
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.DoPaymentPush(GD.Dtos.MallPay.ControllerApi.PaymentPushRequest)">
            <summary>
            第三方支付回调
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.WeiXinPaymentBackFunction">
            <summary>
            微信支付回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.WeiXinRefundBackFunction">
            <summary>
            微信退款回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.HttpRequestToString">
            <summary>
            HTTPBody转成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.MakeSign(System.Xml.XmlDocument)">
            <summary>
            检测签名是否正确
            </summary>
            <param name="xmlDocument">xml文档</param>
            <returns>正确返回true，错误抛异常</returns>
            <summary>
            生成MD5本地签名
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.ToUrl(System.Xml.XmlDocument)">
            <summary>
            转换成url路径
            </summary>
            <param name="xmlDocument">xml文档</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.WeiXinRefundBackFunction(System.String)">
            <summary>
            微信退款回调业务
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.WeiXinPaymentBackFunction(System.String)">
            <summary>
            微信支付回调方法
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.GetXmlValue(System.Xml.XmlDocument,System.String)">
            <summary>
            获取XML值
            </summary>
            <param name="strXml">XML字符串</param>
            <param name="strData">字段值</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.GetReturnXml(System.String,System.String)">
            <summary>
            返回通知 XML
            </summary>
            <param name="returnCode"></param>
            <param name="returnMsg"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.FangDiPayController.GetReturnXmlCallBack(System.String,System.String)">
            <summary>
            返回通知 XML
            </summary>
            <param name="returnCode"></param>
            <param name="returnMsg"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.MallPay.MallPayBaseController">
            <summary>
            平台管理模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.MallPay.MallWeiXinPayController">
            <summary>
            微信支付相关
            </summary>
        </member>
        <member name="M:GD.API.Controllers.MallPay.MallWeiXinPayController.GetOpenidAndAccessTokenFromCode(GD.Dtos.Mall.WeiXinPay.WeiXinTokenRequestDto)">
            <summary>
            获取微信OpenApi和Token授权
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.MallWeiXinPayController.GetPaymentBefore(GD.Dtos.Mall.WeiXinPay.GetWeiXinPaymentBeforeRequestDto)">
            <summary>
            微信支付前准备
            </summary>
            <param name="requestDto">requestDto</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.MallPay.MallWeiXinPayController.PaymentBackFunction(GD.Dtos.Mall.WeiXinPay.WeiXinPaymentBackFunctionRequestDto)">
            <summary>
            支付回调方法
            </summary>
            <param name="requestDto">requestDto</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Mall.AfterSaleController">
            <summary>
            售后控制器
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Mall.AfterSaleController.REFUND_LIMIT">
            <summary>
            退款日期限制为15天以内
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.GetAfterSaleServicesPageList(GD.Dtos.Mall.Mall.GetAfterSaleServiceListRequestDto)">
            <summary>
            获取退款列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.GetAfterSaleServiceDetail(System.String)">
            <summary>
            获取指定服务单详情
            </summary>
            <param name="serviceGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.ProcessAfterSaleService(GD.Dtos.Mall.Mall.ProcessAfterSaleServiceRequestDto)">
            <summary>
            处理服务单
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.GetAfterSaleServiceOrderDetail(System.String)">
            <summary>
            获取服务单订单详情
            </summary>
            <param name="orderNo"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.LaunchWechatRefund(GD.Dtos.Mall.Mall.ProcessAfterSaleServiceContext)">
            <summary>
            发起方迪支付退款
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.GetRandomString(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            生成随机字符串 
            </summary>
            <param name="length">目标字符串的长度</param>
            <param name="useNum">是否包含数字，1=包含，默认为包含</param>
            <param name="useLow">是否包含小写字母，1=包含，默认为包含</param>
            <param name="useUpp">是否包含大写字母，1=包含，默认为包含</param>
            <param name="useSpe">是否包含特殊字符，1=包含，默认为不包含</param>
            <param name="custom">要包含的自定义字符，直接输入要包含的字符列表</param>
            <returns>指定长度的随机字符串</returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.AfterSaleController.ProcessAfterSaleServiceContext(GD.Dtos.Mall.Mall.ProcessAfterSaleServiceContext)">
            <summary>
            处理服务单上下文
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:GD.API.Controllers.Mall.BackStageMallController">
            <summary>
            后台订单相关接口
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.BackStageMallController.BackStageGetOrderTypeList">
            <summary>
            订单类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.BackStageMallController.BackStageGetOrderList(GD.Dtos.Mall.BackStage.BackStageGetOrderListRequestDto)">
            <summary>
            订单列表-分页
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.BackStageMallController.BackStageGetOrderDetailList(GD.Dtos.Mall.BackStage.BackStageGetOrderDetailListRequestDto)">
            <summary>
            订单详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.BackStageMallController.BackStageGetOrderPostList">
            <summary>
            订单发货
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Mall.GroupbuyController">
            <inheritdoc />
            <summary>
            团购
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.GroupbuyController.GetHomeGroupbuyAsync(GD.Dtos.Mall.Groupbuy.GetHomeGroupbuyRequestDto)">
            <summary>
            搜索商品
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Mall.MallBaseController">
            <summary>
            商城模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Mall.MallController">
            <inheritdoc />
            <summary>
            云购商城
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetFirstClassifyList">
            <summary>
            获取商品一级分类
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetSubClassifyList(GD.Dtos.Mall.Mall.GetSubClassifyListRequestDto)">
            <summary>
            获取经营范围/二级分类--根据ParentGuid
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetProductListByCategoryAndSort(GD.Dtos.Mall.Product.GetProductListByCategoryAndSortRequestDto)">
            <summary>
            从分类找商家
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetProductDetail(System.String)">
            <summary>
            商品banner简介
            </summary>
            <param name="proGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetProductDetailText(System.String)">
            <summary>
            商品详细介绍(富文本)
            </summary>
            <param name="proGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetProductSpecification(System.String)">
            <summary>
            商品说明书(富文本)
            </summary>
            <param name="proGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetProductListInMerchant(GD.Dtos.Mall.Mall.GetProductListInMerchantRequestDto)">
            <summary>
            获取商户及其产品列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetRegularMedicine">
            <summary>
            常备药品
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CategoryClassifyList(GD.Dtos.Mall.Category.CategoryClassifyListRequest)">
            <summary>
            服务类目列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CategoryClassifyIntroduce(GD.Dtos.Mall.Category.CategoryClassifyIntroduceRequest)">
            <summary>
            类目详情介绍及Banner
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetClassifyProductList(GD.Dtos.Mall.Category.GetClassifyProductListRequest)">
            <summary>
            商品列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetTreamIntroduceList(GD.Dtos.Mall.Category.GetTreamIntroduceListRequest)">
            <summary>
            团队介绍
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetCommonProductDetailBanner(GD.Dtos.Mall.LivingBeautyMall.GetCommonProductDetailBannerRequestDto)">
            <summary>
            （新）商品banner简介
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetCommonProductIncludingProjectList(GD.Dtos.Mall.LivingBeautyMall.GetCommonProductIncludingProjectListRequestDto)">
            <summary>
            （新）-商品包含产品项
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetCommonProductDetailText(GD.Dtos.Mall.LivingBeautyMall.GetCommonProductDetailTextRequestDto)">
            <summary>
            （新）-商品详细介绍(富文本)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetCommonProductSpecification(GD.Dtos.Mall.LivingBeautyMall.GetCommonProductSpecificationRequestDto)">
            <summary>
            （新）商品购买须知(富文本)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetAllCLEvaluate(GD.Dtos.Consumer.Consumer.GetAllCLEvaluateRequestDto)">
            <summary>
            分页--获取双美全部评价
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.AddShoppingCart(GD.Dtos.Mall.Mall.AddShoppingCartRequestDto)">
            <summary>
            （新）加入购物车
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CheckProductInventory(System.String,System.Int32)">
            <summary>
            检查商品库存
            </summary>
            <param name="productId">商品Guid</param>
            <param name="inventory">数量</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CheckProductListInventoryAsync(GD.Dtos.Mall.Mall.CheckProductListInventoryRequest)">
            <summary>
            批量检查商品库存，返回结果集
            </summary>
            <param name="request">request</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetMyShoppingCarTotal">
            <summary>
            获取我的购物车记录数
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.ShowMyShoppingCartListOfCosmetologyAsync">
            <summary>
            新-获取购物车列表数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.DeleteShoppingCarItemByItemGuid(GD.Dtos.Mall.Mall.DeleteShoppingCarItemByItemGuidRequestDto)">
            <summary>
            删除购物车项
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetOpenIDByCode(GD.Dtos.MallPay.FangDiInterface.GetOpenIDRequestDto)">
            <summary>
            用Code获取openid
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetWeiXinAppIDAsync">
            <summary>
            获取微信AppID
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.WeChatPay(GD.Dtos.Mall.Mall.ChoosePaymentWayDoRequest)">
            <summary>
            微信支付
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.OffLinePay(GD.Dtos.Mall.Mall.OffLinePayRequest)">
            <summary>
            线下支付
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CreateNewFlowing(System.Collections.Generic.List{GD.Models.Mall.OrderModel}@,GD.Models.Utility.UserModel,GD.Models.Mall.TransactionFlowingModel@,System.Collections.Generic.List{GD.Models.Merchant.MerchantFlowingModel}@)">
            <summary>
            创建流水
            </summary>
            <param name="orderModelList"></param>
            <param name="userModel"></param>
            <param name="tfModel"></param>
            <param name="mfModelList"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetRandomString(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            生成随机字符串
            </summary>
            <param name="length">目标字符串的长度</param>
            <param name="useNum">是否包含数字，1=包含，默认为包含</param>
            <param name="useLow">是否包含小写字母，1=包含，默认为包含</param>
            <param name="useUpp">是否包含大写字母，1=包含，默认为包含</param>
            <param name="useSpe">是否包含特殊字符，1=包含，默认为不包含</param>
            <param name="custom">要包含的自定义字符，直接输入要包含的字符列表</param>
            <returns>指定长度的随机字符串</returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.SubmitOrderSettlement(GD.Dtos.Mall.Mall.AddOrderInfoRequestDto)">
            <summary>
            （新）提交订单(所有商品先添加购物车，然后提交商品)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CreatePrimaryOrder(System.Collections.Generic.List{GD.Models.Mall.OrderModel},System.Collections.Generic.List{GD.Models.Mall.OrderDetailModel})">
            <summary>
            生成主订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CheckPhysicalItemStatus(System.Collections.Generic.List{GD.Dtos.Mall.Mall.ShoppingCarProductDetailDto},GD.Models.Mall.OrderModel@)">
            <summary>
            实体商品 计算
            </summary>
            <param name="itemList"></param>
            <param name="orderModel"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CheckNoPhysicalItemStatus(System.Collections.Generic.List{GD.Dtos.Mall.Mall.ShoppingCarProductDetailDto},GD.Models.Mall.OrderModel,System.Collections.Generic.List{System.Collections.Generic.Dictionary{GD.Models.Consumer.GoodsModel,System.Collections.Generic.List{GD.Models.Consumer.GoodsItemModel}}})">
            <summary>
            服务类型订单 计算
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.PaymentCallAsync(GD.Dtos.MallPay.ControllerApi.PaymentPushRequest)">
            <summary>
            方迪支付回调
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.DealWithOrder(GD.Dtos.MallPay.ControllerApi.PaymentPushRequest)">
            <summary>
            回调订单处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.DealWithFAQs(GD.Dtos.MallPay.ControllerApi.PaymentPushRequest)">
            <summary>
            回调问答处理
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CreateOrderProductComment(System.Collections.Generic.List{System.String})">
            <summary>
            订单完成后生成订单下待评价商品记录
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetMyOrderListAsync(GD.Dtos.Mall.Mall.GetMyOrderListRequestDto)">
            <summary>
            获取我的订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetUseableOrderListOfCosmetologyAsync(GD.Dtos.Mall.Mall.GetUseableOrderListOfCosmetologyRequestDto)">
            <summary>
            （新）-可使用订单列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetOrderDetailAsync(GD.Dtos.Mall.Mall.GetOrderDetailRequest)">
            <summary>
            订单详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.BuyProductListAgainAsync(GD.Dtos.Mall.Mall.BuyProductListAgainRequest)">
            <summary>
            再次购买( 即加入商品到购物车，成功跳转购物车)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.NoConmentProductOrProjectListAsync(GD.Dtos.Mall.Mall.NoConmentProductOrProjectListAsyncRequest)">
            <summary>
            待评价项目和产品
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CancelOrder(GD.Dtos.Mall.Mall.CancelOrderRequestDto)">
            <summary>
            取消订单（针对未支付订单）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.TakeDeliveryOfOrder(System.String)">
            <summary>
            订单收货
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.TakeDeliveryAutomaticallyAsync">
            <summary>
            自动确认收货（发货超15天）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.BuyNow(GD.Dtos.Mall.Mall.BuyNowRequest)">
             <summary>
            立即购买
             </summary>
             <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.UpdateShoppingCarItemStatus(System.String)">
             <summary>
            更新该Item在购物车的状态
             </summary>
             <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetCloudUseProjectNumAsync">
            <summary>
            获取当前用户待使用的项目数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.UpdateOrderAfterSale(System.String)">
            <summary>
            订单售后（退款）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.SearchProductAsync(GD.Dtos.Mall.Mall.SearchProductRequestDto)">
            <summary>
            搜索商品
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.RemoveShoppingCarProduct(System.String[])">
            <summary>
            移除购物车商品记录
            </summary>
            <param name="itemIds"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.ChangeShoppingCarProductNumber(System.String,System.Int32)">
            <summary>
            修改购物车商品数量
            </summary>
            <param name="itemId">购物车记录Id</param>
            <param name="productNumber">商品数量</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.GetHomeHotProductAsync(GD.Dtos.Mall.Mall.GetHomeHotProductRequestDto)">
            <summary>
            获取首页热门商品
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.MallController.CloseDeadlineOrderAsync">
            <summary>
            普通待付款订单，若超过付款截止时间(默认为下单后24小时内)，则自动取消
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Mall.OrderController">
            <summary>
            订单相关控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.GetOrderDetailsInfoAsync(System.String)">
            <summary>
            获取订单详情
            </summary>
            <param name="orderGuid">订单guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.SubmitAfterSaleServiceAsync(GD.Dtos.Mall.Order.SubmitAfterSaleServiceRequestDto)">
            <summary>
            提交售后单
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.GetServiceDetailInfoAsync(System.String)">
            <summary>
            获取售后服务单详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.CheckSubmitAfterSaleServiceAsync(GD.Dtos.Mall.Order.SubmitAfterSaleServiceContext)">
            <summary>
            检测售后单提交数据正确性
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.CreateAfterServiceData(GD.Dtos.Mall.Order.SubmitAfterSaleServiceContext)">
            <summary>
            生成售后服务单数据
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.SetGoodsDisabledAsync(GD.Dtos.Mall.Order.SubmitAfterSaleServiceContext)">
            <summary>
            若售后订单为服务类订单，则在申请退款时，需先将对应订单明细的商品卡设置为禁用状态
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.SetOrderProductCommentDisabledAsync(GD.Dtos.Mall.Order.SubmitAfterSaleServiceContext)">
            <summary>
            订单在申请退款时，需将对应的商品待评记录设置为不可用
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.OrderController.GetServiceStatusDisplay(GD.Models.Mall.OrderModel,System.String,System.String)">
            <summary>
            查询售后按钮的显示文字
            </summary>
            <param name="order">订单实例</param>
            <param name="serviceStatus">售后服务状态</param>
            <param name="serviceType">售后服务类型</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Mall.ProductController">
            <summary>
            商品控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetProductListForMerchantManagementAsync(GD.Dtos.Merchant.Merchant.GetProductListForMerchantManagementRequestDto)">
            <summary>
            获取商家端商品列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.CheckProductCodeAsync(GD.Dtos.Mall.Product.CheckProductCodeRequestDto)">
            <summary>
            检查商品编码是否被占用
            </summary>
            <param name="requestDto"></param>
            <returns>是否被占用</returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetPhysicalFirstClassifies">
            <summary>
            获取实物产品一级分类列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetDictionaryClassifyListByGuid(System.String)">
            <summary>
            获取实物产品二级分类列表
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.CreateServiceProductAsync(GD.Dtos.Mall.Product.CreateServiceProductRequestDto)">
            <summary>
            创建服务类产品
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetProjectsOfProductAsync(System.String)">
            <summary>
            获取商品下的服务项目列表
            </summary>
            <param name="productGuid">商品guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyServiceProductBasicInfoAsync(GD.Dtos.Mall.Product.ModifyPhysicalProductBasicInfoRequestDto)">
            <summary>
            修改服务类产品基础信息
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyProductProjectsRelationAsync(GD.Dtos.Mall.Product.ModifyProductProjectsRelationRequestDto)">
            <summary>
            修改服务类商品下包含的服务项目
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyProductBannersAsync(GD.Dtos.Manager.Banner.ModifyBannerInfoRequestDto)">
            <summary>
            修改服务类产品的Banner
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.CreatePhysicalProductAsync(GD.Dtos.Mall.Product.CreateProductOfDoctorCloudRequestDto)">
            <summary>
            发布实体商品（智慧云医）
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyPhysicalProductBasicInfoAsync(GD.Dtos.Mall.Product.ModifyProductBasicInfoOfDoctorCloudRequestDto)">
            <summary>
            修改商品基础信息(智慧云医)
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyProductCategoryInfoOfDoctorCloudAsync(GD.Dtos.Mall.Product.ModifyProductCategoryInfoRequestDto)">
            <summary>
            修改商品分类信息
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyProductSalePropertyOfDoctorCloudAsync(GD.Dtos.Mall.Product.ModifyProductSalePropertyOfDoctorCloudRequestDto)">
            <summary>
            修改商品销售属性
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ModifyProductInventoryOfDoctorCloudAsync(GD.Dtos.Mall.Product.ModifyProductInventoryOfDoctorCloudRequestDto)">
            <summary>
            修改商品库存信息：追加库存、修改警戒库存（智慧云医）
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetProductsOfMerchantRecycleBinAsync(GD.Dtos.Mall.Product.GetProductsOfMerchantRecycleBinRequestDto)">
            <summary>
            获取商铺回收站中的商品列表（智慧云医）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.ChangeProductsOnSaleStatusAsync(GD.Dtos.Mall.Product.ChangeProductsOnSaleStatusRequestDto)">
            <summary>
            修改商品上下架状态
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.RemoveProductToRecycleBinAsync(GD.Dtos.Mall.Product.RemoveProductToRecycleBinRequestDto)">
            <summary>
            移除商品到回收站
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.RestoreProductFromRecycleBinAsync(GD.Dtos.Mall.Product.RemoveProductToRecycleBinRequestDto)">
            <summary>
            从回收站恢复商品
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.DeleteProductsCompletelyAsync(GD.Dtos.Mall.Product.DeleteProductsCompletelyRequestDto)">
            <summary>
            从回收站彻底删除商铺的商品
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetProductInfoAsync(System.String)">
            <summary>
            获取商品详情（除富文本外的所有数据）
            </summary>
            <param name="productGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetRecommendProductAsync(GD.Dtos.Mall.Product.GetRecommendProductListRequestDto)">
            <summary>
            获取推荐商品(明星产品数据)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Mall.ProductController.GetByCategoryIdProductAsync(GD.Dtos.Mall.Product.GetByCategoryProductListRequestDto)">
            <summary>
            获取商品(根据一级产品类型)
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Manager.BannerController">
            <summary>
            Banner控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Manager.BannerController.GetHomeBannerAsync">
            <summary>
            获取首页Banner
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.BannerController.GetHospitalBannerAsync(GD.Dtos.Manager.Banner.GetHospitalBannerRequestDto)">
            <summary>
            获取医院Banner
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.BannerController.ModifyBannerInfoAsync(GD.Dtos.Manager.Banner.ModifyBannerInfoRequestDto)">
            <summary>
            修改banner数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Manager.ManagerBaseController">
            <summary>
            平台管理模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Manager.RecommendController">
            <summary>
            推荐控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetHomeRecommendAsync(GD.Dtos.Manager.Recommend.GetHomeRecommendRequestDto)">
            <summary>
            获取首页推荐
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendTypes">
            <summary>
            获取推荐类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendDoctorListAsync(GD.Dtos.Manager.Recommend.GetRecommendDoctorListRequestDto)">
            <summary>
            获取医生推荐列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendHospitalListAsync(GD.Dtos.Manager.Recommend.GetRecommendHospitalListRequestDto)">
            <summary>
            获取医院推荐列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendOfficeListAsync(GD.Dtos.Manager.Recommend.GetRecommendOfficeListAsyncRequestDto)">
            <summary>
            获取科室推荐列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendArticleListAsync(GD.Dtos.Manager.Recommend.GetRecommendArticleListRequestDto)">
            <summary>
            获取文章推荐列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendProductListAsync(GD.Dtos.Manager.Recommend.GetRecommendProductListRequestDto)">
            <summary>
            获取商品推荐列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Manager.RecommendController.GetRecommendCourseListAsync(GD.Dtos.Manager.Recommend.GetRecommendCourseListRequestDto)">
            <summary>
            获取课程推荐
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Meal.MealAdminController">
            <summary>
            点餐后台管理员
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.Login(GD.Dtos.Meal.MealAdmin.MealAdminLoginRequestDto)">
            <summary>
            管理员登录
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdatePassword(System.String)">
            <summary>
            修改密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.RestMealAdminPassword(System.String,System.String)">
            <summary>
            重置管理员密码(运维专用)
            </summary>
            <param name="userId"></param>
            <param name="newpassword"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GetMealCategories(GD.Dtos.Meal.MealAdmin.GetCategoryListRequestDto)">
            <summary>
            获取餐别列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.CreateCategory(GD.Dtos.Meal.MealAdmin.AddCategoryRequestDto)">
            <summary>
            创建餐别
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdateCategory(GD.Dtos.Meal.MealAdmin.AddCategoryRequestDto)">
            <summary>
            更新餐别
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.DeleteCategory(System.String,System.String)">
            <summary>
            删除餐别
            </summary>
            <param name="hospitalGuid"></param>
            <param name="categoryGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GetMealDishes(GD.Dtos.Meal.MealAdmin.GetMealDishesListRequestDto)">
            <summary>
            获取菜品分页列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.CreateMealDishes(GD.Dtos.Meal.MealAdmin.AddMealDishesRequestDto)">
            <summary>
            创建菜品
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdateMealDishes(GD.Dtos.Meal.MealAdmin.AddMealDishesRequestDto)">
            <summary>
            修改菜品
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdateMealDishesStatus(System.String,System.String)">
            <summary>
            菜品上下架
            </summary>
            <param name="hospitalGuid"></param>
            <param name="dishesGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.VerifyDishes(GD.Dtos.Meal.MealAdmin.AddMealDishesRequestDto)">
            <summary>
            校验菜品参数
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GetMealAccountDetails(GD.Dtos.Meal.MealAdmin.GetMealAccountDetailListRequestDto)">
            <summary>
            获取指定医院用户钱包账户明细
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GetMealAccounts(GD.Dtos.Meal.MealAdmin.GetMealAccountListRequestDto)">
            <summary>
            获取指定医院用户钱包账户列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdateMealAccountStatus(GD.Dtos.Meal.MealAdmin.ModifyMealAccountRequestDto)">
            <summary>
            更新账户状态
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.UpdateMealAccountIdentity(GD.Dtos.Meal.MealAdmin.ModifyMealAccountRequestDto)">
            <summary>
            更新用户账户身份
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.RechargeAccountRechargeOrDeduction(GD.Dtos.Meal.MealAdmin.AddRechargeAccountRequestDto)">
            <summary>
            个人充值账户充值或扣减
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.AllGrantAccountRechargeOrDeduction(GD.Dtos.Meal.MealAdmin.AddAllGrantAccountRequestDto)">
            <summary>
            指定医院所有赠款账户充值或扣减
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GrantAccountRechargeOrDeduction(GD.Dtos.Meal.MealAdmin.AddGrantAccountRequestDto)">
            <summary>
            指定医院指定赠款账户充值或扣减
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.GetMealOperators(GD.Dtos.Meal.MealAdmin.GetMealOperatorListRequestDto)">
            <summary>
            获取食堂操作员列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.DeleteMealOperator(System.String,System.String)">
            <summary>
            删除操作员
            </summary>
            <param name="hospitalGuid"></param>
            <param name="operatorGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.ResetMealOperatorPassword(GD.Dtos.Meal.MealAdmin.ModifyMealOperatorPasswordRequestDto)">
            <summary>
            重置操作员密码
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealAdminController.CreateMealOperator(GD.Dtos.Meal.MealAdmin.AddMealOperatorRequestDto)">
            <summary>
            创建食堂操作员账户
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Meal.MealBaseController">
            <summary>
            点餐相关接口控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Meal.MealCanteenController">
            <summary>
            食堂端
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.GetBookMealListAsync(GD.Dtos.Meal.MealCanteen.GetBookMealListAsyncRequestDto)">
            <summary>
            获取已预订菜品列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.GetCategoryListAsync(GD.Dtos.Meal.MealCanteen.GetCategoryListAsyncRequestDto)">
            <summary>
            获取分类（如早中晚餐）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.GetUseFullDateListAsync(GD.Dtos.Meal.MealCanteen.GetUseFullDateListAsyncRequestDto)">
            <summary>
            获取已填日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.ScanToGetDisheAsync(GD.Dtos.Meal.MealCanteen.ScanToGetDisheAsyncRequestDto)">
            <summary>
            扫码验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.GetDisheMaintenanceAsync(GD.Dtos.Meal.MealCanteen.GetDisheMaintenanceAsyncRequestDto)">
            <summary>
            菜品维护-查询
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.GetCheckedDisheMaintenanceAsync(GD.Dtos.Meal.MealCanteen.GetCheckedDisheMaintenanceAsyncRequestDto)">
            <summary>
            菜品维护-查询已选
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.AddDisheMaintenanceAsync(GD.Dtos.Meal.MealCanteen.AddDisheMaintenanceAsyncRequestDto)">
            <summary>
            菜品维护-添加
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.MealOperatorUpdatePassword(System.String)">
            <summary>
            修改密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealCanteenController.Login(GD.Dtos.Meal.MealCanteen.MealCanteenLoginRequestDto)">
            <summary>
            食堂端登录
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Meal.MealClientController">
            <summary>
            点餐客户端控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.SubmitMealOrderAsync(GD.Dtos.Meal.MealClient.SubmitMealOrderRequestDto)">
            <summary>
            提交点餐订单
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.CheckDishesSaleStatus(GD.Dtos.FAQs.FAQsClient.CheckDishesSaleStatusRequestDto)">
            <summary>
            检测是否有菜品未在售
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMealUserBasicInfoAsync(System.String)">
            <summary>
            获取点餐用户基础数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMealMenuDateListAsync(System.String)">
            <summary>
            获取食堂已安排菜单的日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMenuDetailOneDayAsync(GD.Dtos.Meal.MealClient.GetMenuDetailOneDayRequestDto)">
            <summary>
            获取指定日期的菜单详情
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetUserMealOrderPageListAsync(GD.Dtos.Meal.MealClient.GetUserMealOrderPageListRequestDto)">
            <summary>
            获取用户点餐订单分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMealOrderDetailForTransferAsync(System.String)">
            <summary>
            获取待转让订单详情信息
            </summary>
            <param name="orderGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.CancelMealOrderAsync(System.String)">
            <summary>
            取消点餐订单
            </summary>
            <param name="orderGuid">订单guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.AcceptTransferedMealOrderAsync(GD.Dtos.Meal.MealClient.AcceptTransferedMealOrderRequestDto)">
            <summary>
            接收转让订单
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMealWalletBalanceAsync(System.String)">
            <summary>
            获取钱包余额
            </summary>
            <param name="hospitalGuid">账户所属医院guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetMealWalletRecordAsync(GD.Dtos.Meal.MealClient.GetMealWalletRecordRequestDto)">
            <summary>
            获取钱包流水记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Meal.MealClientController.GetTransferedWXAcodeAsync(System.String)">
            <summary>
            获取订单转让码信息
            </summary>
            <param name="orderGuid">订单guid</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Merchant.MerchantBaseController">
            <summary>
            商家模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Merchant.MerchantController">
            <inheritdoc />
            <summary>
            商户控制器
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Merchant.MerchantController.xmppClient">
            <summary>
            xmpp Client
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.MerchantLoginAsync(GD.Dtos.Merchant.Merchant.MerchantLoginRequestDto)">
            <summary>
            商户登录
            </summary>
            <param name="loginRequestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.RegisterIM(GD.Models.Merchant.MerchantModel)">
            <summary>
            注册IM账号
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ModifyPassword(GD.Dtos.Merchant.Merchant.MerchantModifyPasswordRequestDto)">
            <summary>
            商户修改密码 
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.RegisterMerchant(GD.Dtos.DtoIn.MerchantDto)">
            <summary>
            注册商户
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantBasicStatisticsDataAsync(System.String)">
            <summary>
            获取商户订单基本统计数据
            </summary>
            <param name="merchantGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantOrderStatisticsDataSomeDaysAsync(GD.Dtos.Merchant.Merchant.GetMerchantOrderStatisticsDataSomeDaysRequestDto)">
            <summary>
            获取商户近期的订单数据(销售额、订单数量、商品数量)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantBasicInfoAsync(System.String)">
            <summary>
            获取商户基础信息
            </summary>
            <param name="merchantGuid">商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantRegisterState">
            <summary>
            查看当前用户是否注册商户,若注册提供注册状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetScopes">
            <summary>
            获取经营范围基础数据(取自Dictionary表)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchanScopesDetailAsync(System.String)">
            <summary>
            获取商铺经营范围详情数据
            </summary>
            <param name="merchantGuid">商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantCertificateConfig">
            <summary>
            获取商户注册资料配置项
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantCertificateDetailAsync">
            <summary>
            获取商户注册资料配置项明细（所有配置项+配置项对应的值）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.AuditMerchantRegisterInfo(GD.Dtos.Merchant.Merchant.AuditMerchantRegisterInfoRequestDto)">
            <summary>
            审核商户注册信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CheckIsMerchantUserAsync(System.String)">
            <summary>
            判断用户是否是商户用户
            </summary>
            <param name="userGuid">用户Id</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetProductOneLevelCategorysOfMerchantAsync(System.String)">
            <summary>
            获取商户的商品一级分类
            </summary>
            <param name="merchantGuid">商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetProductTwoLevelCategorysOfMerchantByOneLevelCategoryGuidAsync(System.String)">
            <summary>
            获取商户的商品二级分类
            </summary>
            <param name="oneLevelCategoryGuid">商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetBrandsOfMerchantAsync(System.String)">
            <summary>
            获取商户的品牌数据(非分页)
            </summary>
            <param name="merchantGuid">商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CreateBrandForMerchantAsync(GD.Dtos.Merchant.Merchant.CreateBrandForMerchantRequestDto)">
            <summary>
            商户创建品牌数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.RemoveBrandOfMerchantAsync(GD.Dtos.Merchant.Merchant.RemoveBrandOfMerchantRequestDto)">
            <summary>
            移除品牌数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.EditBrandAsync(GD.Dtos.Merchant.Merchant.EditBrandRequestDto)">
            <summary>
            修改品牌数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetTherapistsScheduleByProjectIdOneDayAsync(GD.Dtos.Merchant.Therapist.GetTherapistsScheduleByProjectIdOneDayRequestDto)">
            <summary>
            获取商户某天某项目的服务人员和排班详情(不分页)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetTherapistScheduleDetailForOneDayAsync(GD.Dtos.Merchant.Merchant.GetTherapistScheduleDetailForOneDayRequestDto)">
            <summary>
            获取服务人员某一天的排班详情（时间刻度列表），用于用户预约时选择服务人员的时间
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantMaxDurationTimeButtonsAsync(System.String,System.String,System.Int32)">
            <summary>
            获取商户最大营业时间的时间刻度按钮
            </summary>
            <param name="merchantId">商户Id</param>
            <param name="templateGuid"></param>
            <param name="timeStep">时间刻度按钮间隔，默认为15分钟</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CheckCurrentDayGetMinAppointTime(System.DateTime)">
            <summary>
            检测当前排班是否是当天，并获取当天能够预约的最早时间
            </summary>
            <param name="scheduleDate"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetServiceClassifys">
            <summary>
            获取服务型商品类别
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetServiceTwoLevelClassifys(System.String)">
            <summary>
            获取指定商户服务类型下二级分类列表
            </summary>
            <param name="classifyGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetClassifys">
            <summary>
            获取服务类型二级分类列表(返回{id:'', name:''}集合)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantClassifys">
            <summary>
            获取指定商户平台二级分类列表(返回{id:'', name:''}集合)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetCategoriesByClassify(System.String)">
            <summary>
            获取商户指定二级分类下类别列表(返回{id:'', name:''}集合)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantCategoryDetailInfo(System.String)">
            <summary>
            获取类别详细信息
            </summary>
            <param name="categoryGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetCategories(GD.Dtos.Merchant.Category.GetMerchantCategoryListRequestDto)">
            <summary>
            获取类别列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CreateCategory(GD.Dtos.Merchant.Category.AddMerchantCategoryRequestDto)">
            <summary>
            创建类别
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.UpdateCategory(GD.Dtos.Merchant.Category.AddMerchantCategoryRequestDto)">
            <summary>
            更新类别
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.OnlieCategory(System.String)">
            <summary>
            是否上线类别
            </summary>
            <param name="categoryGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantProjects(GD.Dtos.Mall.Project.GetMerchantProjectListRequestDto)">
            <summary>
            获取服务项目列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CreateMerchantProject(GD.Dtos.Mall.Project.AddMerchantProjectRequestDto)">
            <summary>
            创建服务项目
            </summary>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.UpdateMerchantProject(GD.Dtos.Mall.Project.AddMerchantProjectRequestDto)">
            <summary>
            更新服务项目
            </summary>
            <param name="project"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.DeleteMerchantProject(System.String)">
            <summary>
            删除服务项目
            </summary>
            <param name="projectGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.LockScheduleDetailTimesAsync(GD.Dtos.Merchant.Merchant.LockScheduleDetailTimesRequestDto)">
            <summary>
            服务人员锁定排班时间
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.UnLockScheduleDetailTimesAsync(GD.Dtos.Merchant.Merchant.UnLockScheduleDetailTimesRequestDto)">
            <summary>
            解锁服务人员某天的锁定时间
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetWorkShiftTemplatePageListAsync(GD.Dtos.Merchant.Merchant.GetWorkShiftTemplatePageListRequestDto)">
            <summary>
            获取班次模板分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetWorkShiftDetailsOfTemplateGuidAsync(System.String)">
            <summary>
            获取班次模板下的班次详情
            </summary>
            <param name="templateGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.AddWorkShiftTemplateAsync(GD.Dtos.Merchant.Merchant.AddWorkShiftTemplateRequestDto)">
            <summary>
            新增班次模板
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ModifyWorkShiftTemplateAsync(GD.Dtos.Merchant.Merchant.ModifyWorkShiftTemplateRequestDto)">
            <summary>
            修改班次模板
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetCurrentMonthAndNexMonthSchduleTemplateButtonAsync(System.String)">
            <summary>
            获取当月和下月排班周期数据
            </summary>
            <param name="merchantGuid">商户guid选填，默认为当前登录的商户guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantSchduleCalendarAsync(System.String)">
            <summary>
            获取商户指定模板周期的排班日历
            </summary>
            <param name="scheduleTemplateGuid">排班周期guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ScheduleTherapistsWorkShiftInBatchesAsync(GD.Dtos.Merchant.Merchant.ScheduleTherapistsWorkShiftInBatchesResquestDto)">
            <summary>
            商户批次安排服务人员排班（一次提交一个周期；细节性排班）
            商户对每一天每个班次进行排班调整
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ScheduleTherapistsWorkShiftInCopyBatchesAsync(GD.Dtos.Merchant.Merchant.ScheduleTherapistsWorkShiftInCopyBatchesRequestDto)">
            <summary>
            商户批次安排服务人员（一次提交一个周期，将一天的排班复制到整个周期上）
            商户只需安排一天的班次
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.RemoveScheduleCycleAsync(System.String)">
            <summary>
            删除商户安排的周期排班
            </summary>
            <param name="scheduleTemplateGuid">周期排班guid</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ModifyTherapistsWorkShiftInBatchesAsync(GD.Dtos.Merchant.Merchant.ModifyTherapistsWorkShiftInBatchesRequestDto)">
            <summary>
            商户批次修改服务人员排班（一次提交一个周期；细节性修改排班）
            商户对每一天每个班次进行覆盖性排班调整
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ModifyTherapistsWorkShiftDailyInBatchesAsync(GD.Dtos.Merchant.Merchant.ModifyTherapistsWorkShiftDailyInBatchesRequestDto)">
            <summary>
            服务人员一日批量修改排班；一次提交一天的修改
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetScheduleTemplateListAsync(GD.Dtos.Merchant.Merchant.GetScheduleTemplateListRequestDto)">
            <summary>
            分页获取商户排班周期数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetTherapistScheduleDetailForDurationAsync(System.String)">
            <summary>
            获取服务人员连续天数的排班明细数据
            </summary>
            <param name="therapistId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantOrderPageListAsync(GD.Dtos.Merchant.Merchant.GetMerchantOrderPageListRequestDto)">
            <summary>
            查询商户订单分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetMerchantOrderStatusConditionList">
            <summary>
            门店端获取订单列表筛选条件订单状态列表数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetPayTypeListItem">
            <summary>
            支付方式枚举值列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.ConfirmOrderPaymentAsync(System.String)">
            <summary>
            订单确认付款
            </summary>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.CreateOrderProductComment(System.Collections.Generic.List{System.String})">
            <summary>
            订单完成后生成订单下待评价商品记录
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.PlaceOrderAsync(GD.Dtos.Merchant.Merchant.PlaceOrderRequestDto)">
            <summary>
            门店开单（仅限服务类订单）
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.GetProductItemByServiceClassifyAsync(System.String,System.String)">
            <summary>
            获取指定类型下的商品列表
            </summary>
            <param name="classifyGuid"></param>
            <param name="merchantId"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.PostDeliveryAsync(GD.Dtos.Merchant.Merchant.PostDeliveryRequestDto)">
            <summary>
            提交发货
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.MerchantController.MissConsumptionAutomaticAsyncOfMerchant">
            <summary>
            消费预约自动过期（默认超过预约时间一小时后）,门店范围
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Merchant.TherapistController">
            <summary>
            服务人员控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetTherapistListAsync(GD.Dtos.Merchant.Therapist.GetTherapistListRequestDto)">
            <summary>
            获取服务人员列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetMerchantClassifyProjects(System.String,System.String)">
            <summary>
            获取指定商户指定分类下项目列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetMerchantConsumerClassifies(System.String)">
            <summary>
            获取指定商户下用户（手机号码）已购大类项目
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetConsumerProjects(System.String,System.String)">
            <summary>
            获取指定商户下用户（手机号码）已购服务项目列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.AddNewTherapist(GD.Dtos.Merchant.Therapist.AddNewTherapistRequestDto)">
            <summary>
             新增服务人员及其关联项目
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetTherapistDetailInfo(System.String)">
            <summary>
            获取指定服务人员详细信息
            </summary>
            <param name="therapistGuid"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.UpdateTherapist(GD.Dtos.Merchant.Therapist.ModifyTherapistRequestDto)">
            <summary>
            更新服务人员
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.BindTherapistWeChatOpenIdAsync(GD.Dtos.Merchant.Therapist.BindTherapistWeChatOpenIdRequestDto)">
            <summary>
            服务人员绑定微信OpenId
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.ResetTherapistPwdAsync(System.String)">
            <summary>
            重置服务人员为手机号后六位
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetTherapistsScheduleByProjectIdOneDayAsync(GD.Dtos.Merchant.Therapist.GetTherapistsScheduleByProjectIdOneDayRequestDto)">
            <summary>
            获取商户端某天某项目的服务人员和排班详情(不分页)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetMerchantMaxDurationTimeButtonsAsync(System.String,System.String,System.Int32)">
            <summary>
            获取商户最大营业时间的时间刻度按钮
            </summary>
            <param name="merchantId">商户Id</param>
            <param name="templateGuid"></param>
            <param name="timeStep">时间刻度按钮间隔，默认为15分钟</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.CheckCurrentDayGetMinAppointTime(System.DateTime)">
            <summary>
            检测当前排班是否是当天，并获取当天能够预约的最早时间
            </summary>
            <param name="scheduleDate"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetMerchantClassifyTherapistsAsync">
            <summary>
            获取指定商户分类下服务人员列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.GetTherapistClientAppId">
            <summary>
            获取服务人员端口AppId
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Merchant.TherapistController.UpdateTherapistOpenIdAsync(GD.Dtos.Merchant.Therapist.UpdateTherapistOpenIdRequestDto)">
            <summary>
            更新服务人员OpenId
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Payment.HospitalPaymentController">
            <summary>
            医院支付控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.GetOpenIdByOauth2AccessToken(System.String)">
            <summary>
            智慧云医公众号code换openid
            </summary>
            <param name="code"></param>
            <returns>直接返回openid字符串</returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.HospitalUnifiedOrderAsync(GD.Dtos.Payment.HospitalPayment.HospitalUnifiedOrderRequestDto)">
            <summary>
            医院公众号二维码扫码支付下单
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.PaymentBackAsync">
            <summary>
            医院扫码支付回调
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.CreateHospitalEvaluationAsync">
            <summary>
            创建支付评价记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.PaymentSuccessMsgNotify(GD.Dtos.Payment.HospitalPayment.PaymentSuccessMsgNotifyDto)">
            <summary>
            支付成功模板消息通知
            </summary>
            <param name="dto"></param>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.CheckSign(System.String,System.String)">
            <summary>
            检测支付回调签名是否正确
            </summary>
            <param name="xml"></param>
            <param name="merchantSecret"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.HttpRequestToString">
            <summary>
            HTTPBody转成字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.RealtimeNotification(GD.Dtos.Payment.HospitalPayment.HospitalDataBoardNotificationMsg)">
            <summary>
            实时通知微信收款看板数据更新
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Payment.HospitalPaymentController.MQNotify">
            <summary>
            MQ通知
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Payment.PaymentBaseController">
            <summary>
            商家模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Questionnaire.QuestionnaireBaseController">
            <summary>
            问卷控制器
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Report.CommonReportController">
            <summary>
            通用报表
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.ApplyCreateReport(GD.Dtos.Report.CommonReport.ApplyCreateReportRequest)">
            <summary>
            运营-申请创建报表/被驳回后重新申请
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetMyAppyListAsync(GD.Dtos.Report.CommonReport.GetMyAppyListRequestDto)">
            <summary>
            运营-我的申请列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetListToApprove(GD.Dtos.Report.CommonReport.GetListToApproveRequest)">
            <summary>
            运营-列表审核List
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.CancelMyApprove(GD.Dtos.Report.CommonReport.CancelMyApproveRequest)">
            <summary>
            运营-取消我的申请
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetOneApproveWithList(GD.Dtos.Report.CommonReport.GetOneApproveWithListRequestDto)">
            <summary>
            运营-获取单条申请以及列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetRecondReportList(GD.Dtos.Report.CommonReport.GetRecondReportListRequest)">
            <summary>
            运营-预览列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.IsRightSQLStr(System.String)">
            <summary>
            检查SQL是否正确
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.IsRightConditionSQLStr(System.String)">
            <summary>
            检查条件SQL是否正确
            </summary>
            <param name="sqlStr"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.IsRightStatusForOperation(GD.Models.Report.ReportApproveModel)">
            <summary>
            可审批状态-运营
            </summary>
            <param name="approveModel"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.ApproveReportList(GD.Dtos.Report.CommonReport.ApproveReportListRequest)">
            <summary>
            运营-审批列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetMyApproveList(GD.Dtos.Report.CommonReport.GetMyApproveListRequest)">
            <summary>
            IT-我的审核列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetConfirmDemandAndProvideSql(GD.Dtos.Report.CommonReport.ConfirmDemandAndProvideSqlRequest)">
            <summary>
            IT-获取单条申请
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.ITSubmitSqlOrRefuseDemand(GD.Dtos.Report.CommonReport.ITSubmitSqlOrRefuseDemandRequest)">
            <summary>
            IT-提交SQL以及条件配置 或驳回需求
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.GetMySQLApproveList(GD.Dtos.Report.CommonReport.GetSQLApproveListRequest)">
            <summary>
            IT-审核SQL语句 -我的审核列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.ITApproveSql(GD.Dtos.Report.CommonReport.ITApproveSqlRequest)">
            <summary>
            IT-审核SQL语句
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.IsITRightStatusForOperation(GD.Models.Report.ReportApproveModel)">
            <summary>
            IT-编写SQL可审批状态
            </summary>
            <param name="approveModel"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Report.CommonReportController.IsITSQLRightStatusForOperation(GD.Models.Report.ReportApproveModel)">
            <summary>
            IT-SQL可审批状态
            </summary>
            <param name="approveModel"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Report.ReportBaseController">
            <summary>
            问答模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Utility.AccessoryController">
            <summary>
            附件控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccessoryController.GetAcessoryInfoAsync(System.String)">
            <summary>
            获取附件信息
            </summary>
            <param name="accessoryGuid">附件guid</param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.AccountController">
            <summary>
            账号控制器，提供登录，用机验证码等功能
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.xmppClient">
            <summary>
            xmpp Client
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.VerificationExpires">
            <summary>
            手机验证码有效期分钟数
            默认为1分钟
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.enableXmpp">
            <summary>
            是否启用XMPP注册
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.httpBind">
            <summary>
            提供给前端连接OpenFire服务器的连接
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.domain">
            <summary>
            提供给前端连接OpenFire服务器的域名
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.VerificationTemplate">
            <summary>
            验证码短信模板ID
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.weChatClientAppId">
            <summary>
            用户端微信公众号ID
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.weChatClientSecret">
            <summary>
            用户端微信公众号密钥
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.AccountController.rabbitMQws">
            <summary>
            RabbitMQ连接串，JS使用
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.AccoutExists(System.String)">
            <summary>
            判断电话号码是否已经注册
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.Register(GD.Dtos.Utility.Account.PhonePasswordCodeRequestDto)">
            <summary>
            用户注册
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.TryGetSubscriptionRecommendUser(System.String)">
            <summary>
            尝试获取用户关注公众号的推荐人
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.CreateVerificationCode(System.String)">
            <summary>
            生成手机验证码
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.VerifyCode(GD.Dtos.Utility.Account.VerifyCodeRequestDto)">
            <summary>
            校验手机验证码有效性
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.Login(GD.Dtos.Utility.Account.LoginRequestDto)">
            <summary>
            用户登录
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.UpdateOpenId(System.String)">
            <summary>
            根据微信授权码更新用户微信登录的 OpenId
            </summary>
            <param name="wxCode">微信授权码</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.LoginAdmin(GD.Dtos.Utility.Account.LoginAdminRequestDto)">
            <summary>
            登录管理后台
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.ResetPassword(GD.Dtos.Utility.Account.PhonePasswordCodeRequestDto)">
            <summary>
            重置密码
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.UpdatePassword(System.String)">
            <summary>
            修改密码
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.UpdatePhone(GD.Dtos.Utility.Account.VerifyCodeRequestDto)">
            <summary>
            修改电话号码
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.SSO">
            <summary>
            单点登录，验证Token有效性，供外部系统调用验证
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.Logout">
            <summary>
            用户登出
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.IMStatusAsync(System.String)">
            <summary>
            查询用户IM在线状态
            </summary>
            <param name="userId">用户IM账号</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.GetOpenId(System.String)">
            <summary>
            根据微信授权码，获取用户微信OpenId
            </summary>
            <param name="wxCode"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.AccountController.RegisterIM(GD.Models.Utility.UserModel)">
            <summary>
            注册IM账号
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.ArticleController">
            <inheritdoc />
            <summary>
            文章控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetCupationalDiseasePrevention(GD.Dtos.Utility.Article.GetCcupationalDiseasePreventionRequestDto)">
            <summary>
            职业病预防文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetCupationalDiseaseKnowledge(GD.Dtos.Utility.Article.GetCcupationalDiseaseKnowledgeRequestDto)">
            <summary>
            职业病常识文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetArticleType">
            <summary>
            获取文章类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetUserArticles(GD.Dtos.Utility.Article.GetUserArticleRequestDto)">
            <summary>
            获取用户文章列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetHomeHeadlineAsync(GD.Dtos.Utility.Article.GetHomeHeadlineRequestDto)">
            <summary>
            获取首页头条
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.SearchArticleAsync(GD.Dtos.Utility.Article.SearchArticleRequestDto)">
            <summary>
            搜索文章
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetArticleListAsync(GD.Dtos.Admin.Article.GetArticleListRequestDto)">
            <summary>
            获取文章列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.AddArticleAsync(GD.Dtos.Admin.Article.AddArticleRequestDto)">
            <summary>
            添加文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.UpdateArticleAsync(GD.Dtos.Admin.Article.UpdateArticleRequestDto)">
            <summary>
            修改文章
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetArticleInfoAsync(GD.Dtos.Admin.Article.GetArticleInfoRequestDto)">
            <summary>
            获取文章信息
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.SetArticleVisibleAsync(GD.Dtos.Admin.Article.SetArticleVisibleRequestDto)">
            <summary>
            是否可阅读
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.RemoveArticleAsync(System.String)">
            <summary>
            移除文章
            </summary>
            <param name="articleId">文章Id</param>
            <returns>操作是否成功</returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetClientArticlePageListAsync(GD.Dtos.Utility.Article.GetClientArticlePageListRequestDto)">
            <summary>
            获取客户端综合文章分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetClientArticleDetailAsync(System.String,GD.Models.Utility.ArticleModel.ArticleSourceTypeEnum)">
            <summary>
            获取客户端综合文章详情
            </summary>
            <param name="articleGuid"></param>
            <param name="articleSource"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ArticleController.GetClientRecommandArticleListAsync(GD.Dtos.Utility.Article.GetClientRecommandArticleListRequestDto)">
            <summary>
            获取客户端推荐综合文章分页列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.CourseController">
            <summary>
            课程控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.CourseController.GetHotCourseAsync(GD.Dtos.Utility.Course.GetHotCourseRequestDto)">
            <summary>
            获取首页热门课程
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.CourseController.GetCourseDetailAsync(GD.Dtos.Utility.Course.GetCourseDetailRequestDto)">
            <summary>
            获取课程详细
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.CourseController.GetHealthManagementPageBanner">
            <summary>
            获取健康管理页面banner
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.MessageController">
            <summary>
            消息相关控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.GetFromUserListByToUserGuidAsync(GD.Dtos.Utility.Message.GetFromUserListByToUserGuidRequestDto)">
            <summary>
            通过接收者用户guid获取发送者用户列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.GetMessageListByFromAndToAsync(GD.Dtos.Utility.Message.GetMessageListByFromAndToRequestDto)">
            <summary>
            获取消息列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.GetMyTopicList(GD.Dtos.Consumer.Consumer.PageRequestDto)">
            <summary>
            我的Topic消息列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.AddMessageTopic(GD.Dtos.Utility.Utility.AddMessageInfoListRequestDto)">
            <summary>
            新增Topic记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.AddMessageTopicList(System.Collections.Generic.List{GD.Dtos.Utility.Utility.AddMessageInfoListRequestDto})">
            <summary>
            新增Topic记录(支持批量)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.AddMessageInfo(System.Collections.Generic.List{GD.Dtos.Utility.Utility.AddMessageInfoRequestDto})">
            <summary>
            持久化聊天记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.DoctorOfflineMessageNotification(GD.Models.Utility.MessageModel)">
            <summary>
            医生离线消息通知
            </summary>
            <param name="messageModel"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.MessageController.GetHistoryMessageListStartByTopMsgAsync(GD.Dtos.Utility.Message.GetHistoryMessageListStartByTopMsgRequestDto)">
            <summary>
            通过顶部消息Id获取历史消息记录
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.RichtextController">
            <summary>
            富文本控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.RichtextController.ModifyRichtextAsync(GD.Dtos.Utility.Richtext.ModifyRichtextRequestDto)">
            <summary>
            修改富文本数据
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.RichtextController.GetRichtextAsync(System.String)">
            <summary>
            获取富文本
            </summary>
            <param name="richtextId"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.ScoreController">
            <summary>
            积分
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.ScoreController.AddScore(GD.Dtos.Utility.Score.AddScoreDto)">
            <summary>
            添加积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.ScoreController.GetUserTotalScoreAsync(GD.Common.EnumDefine.UserType)">
            <summary>
            获取用户对应角色的总积分
            </summary>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.TestController">
            <summary>
            测试服务
            </summary>
        </member>
        <member name="F:GD.API.Controllers.Utility.TestController.xmppClient">
            <summary>
            xmpp Client
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.TestController.Db">
            <summary>
            测试数据库服务
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.TestController.Xmpp">
            <summary>
            XMPP服务测试
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.TestController.Upload(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            上传文件
            </summary>
            <param name="fileData"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.UserController">
            <summary>
            用户控制器
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.UpdateUserPassword(System.String)">
            <summary>
            修改用户密码
            </summary>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.SetUserPassword(System.String,System.String)">
            <summary>
            设置用户密码
            </summary>
            <param name="phone">用户手机号</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeUserPhone(GD.Dtos.Utility.User.ChangeUserPhoneRequestDto)">
            <summary>
            用户更换手机号
            </summary>
            <param name="changeUserPhoneDto">用户手机号修改Dto</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetUserScore(GD.Dtos.Utility.User.GetUserScoreRequestDto)">
            <summary>
            获取分页积分列表
            </summary>
            <param name="userScoreDto">含分页的积分传入Dto</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetMyTotalScoreAsync">
            <summary>
            获取我的总积分（智慧云医）
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetUserType">
            <summary>
            获取用户类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.UpdateUserInfo(GD.Dtos.Utility.User.UpdateUserInfoRequestDto)">
            <summary>
            修改用户基础信息
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.CheckSignIn(GD.Common.EnumDefine.UserType)">
            <summary>
            判断是否签到
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetScoreOfSignIn(GD.Common.EnumDefine.UserType)">
            <summary>
            签到积分
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetSearchHistory">
            <summary>
            用户搜索历史
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.RemoveSearchHistoryAsync">
            <summary>
            清除搜索历史
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetHotSearchHistory">
            <summary>
            获取热搜
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeNickName(System.String)">
            <summary>
            修改用户昵称
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeUserName(System.String)">
            <summary>
            修改真实姓名
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeUserGender(System.String)">
            <summary>
            修改性别
            </summary>
            <param name="gender">性别 F/M</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeUserBirthday(System.DateTime)">
            <summary>
            修改生日
            </summary>
            <param name="birthday">生日</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.ChangeUserIdentityNumber(System.String)">
            <summary>
            修改身份证号
            </summary>
            <param name="identityNo">用户身份证号</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.CheckYourself(System.String,System.String)">
            <summary>
            验证身份（真实姓名+身份证号）
            </summary>
            <param name="realName"></param>
            <param name="identityNumber"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.CheckExistUser(System.String)">
            <summary>
            检测手机号是否已注册用户
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetUserWeChatQRCodeAsync(System.String)">
            <summary>
            获取云医用户端公众号二维码（有效期29天，到期后需要重新刷新二维码）
            </summary>
            <param name="userType"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UserController.GetUsersInfoAsync(GD.Dtos.Utility.User.GetUsersInfoRequestDto)">
            <summary>
            通过用户id集合获取用户信息列表
            </summary>
            <param name="requestDto"></param>
            <returns></returns>
        </member>
        <member name="T:GD.API.Controllers.Utility.UtilityBaseController">
            <summary>
            通用功能模块控制器基类
            </summary>
        </member>
        <member name="T:GD.API.Controllers.Utility.UtilityController">
            <inheritdoc />
            <summary>
            我的页面-相关
            </summary>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.LoadHomePage(System.String)">
            <summary>
            进入首页,调用该接口(头像/昵称)
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetUserInfo(System.String)">
            <summary>
            根据ID获取用户信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.EditPortrait(GD.Dtos.Utility.Utility.EditPortraitRequestDto)">
            <summary>
            修改头像
            </summary>
            <param name="userPortraitDto"></param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetUserInfoList(System.String)">
             <summary>
            根据ID获取用户生活习惯列表
             </summary>
             <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.AddUserInfoList(GD.Dtos.Utility.Utility.AddUserInfoRequestDto)">
            <summary>
            生活习惯添加
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.AddAliasAsync(GD.Dtos.Utility.Utility.AddAliasRequestDto)">
            <summary>
            更新别名
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.WriteSystemVisitLogAsync(GD.Common.EnumDefine.UserType)">
            <summary>
            写入系统访问记录
            </summary>
            <param name="userType">用户类型：Consumer-消费者；Doctor-医生；</param>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetOnlineServiceInfo(System.String)">
            <summary>
            获取在线客服信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetPlatformServiceId">
            <summary>
            获取平台客服Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetAskedDoctorOnlineCustomerServiceId">
            <summary>
            问医在线客服Id
            </summary>
            <returns></returns>
        </member>
        <member name="M:GD.API.Controllers.Utility.UtilityController.GetPlatformServiceTelAsync">
            <summary>
            获取平台客服电话
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
